

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 27 22:44:03 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F26K80 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _BRGCON3	set	3653
    53  0000                     _BRGCON2	set	3652
    54  0000                     _BRGCON1	set	3651
    55  0000                     _RXF1SIDL	set	3813
    56  0000                     _RXF1SIDH	set	3812
    57  0000                     _RXF1EIDL	set	3815
    58  0000                     _RXF1EIDH	set	3814
    59  0000                     _RXF0SIDL	set	3809
    60  0000                     _RXF0SIDH	set	3808
    61  0000                     _RXF0EIDL	set	3811
    62  0000                     _RXF0EIDH	set	3810
    63  0000                     _RXM1SIDL	set	3837
    64  0000                     _RXM1SIDH	set	3836
    65  0000                     _RXM1EIDL	set	3839
    66  0000                     _RXM1EIDH	set	3838
    67  0000                     _RXM0SIDL	set	3833
    68  0000                     _RXM0SIDH	set	3832
    69  0000                     _RXM0EIDL	set	3835
    70  0000                     _RXM0EIDH	set	3834
    71  0000                     _TMR0L	set	4054
    72  0000                     _TMR0H	set	4055
    73  0000                     _RXB0CONbits	set	3936
    74  0000                     _RXB0SIDL	set	3938
    75  0000                     _RXB0SIDH	set	3937
    76  0000                     _RXB0DLC	set	3941
    77  0000                     _RXB0D7	set	3949
    78  0000                     _RXB0D6	set	3948
    79  0000                     _RXB0D5	set	3947
    80  0000                     _RXB0D4	set	3946
    81  0000                     _RXB0D3	set	3945
    82  0000                     _RXB0D2	set	3944
    83  0000                     _RXB0D1	set	3943
    84  0000                     _RXB0D0	set	3942
    85  0000                     _PIR5bits	set	3959
    86  0000                     _T0CONbits	set	4053
    87  0000                     _LATBbits	set	3978
    88  0000                     _LATCbits	set	3979
    89  0000                     _TRISCbits	set	3988
    90  0000                     _INTCONbits	set	4082
    91  0000                     _PIE5bits	set	3958
    92  0000                     _CANSTATbits	set	3950
    93  0000                     _ECANCONbits	set	3954
    94  0000                     _ECANCON	set	3954
    95  0000                     _CANSTAT	set	3950
    96  0000                     _CANCONbits	set	3951
    97  0000                     _TRISBbits	set	3987
    98                           
    99                           ; #config settings
   100                           
   101                           	psect	cinit
   102  000236                     __pcinit:
   103                           	callstack 0
   104  000236                     start_initialization:
   105                           	callstack 0
   106  000236                     __initialization:
   107                           	callstack 0
   108                           
   109                           ; Clear objects allocated to COMRAM (20 bytes)
   110  000236  EE00  F001         	lfsr	0,__pbssCOMRAM
   111  00023A  0E14               	movlw	20
   112  00023C                     clear_0:
   113  00023C  6AEE               	clrf	postinc0,c
   114  00023E  06E8               	decf	wreg,f,c
   115  000240  E1FD               	bnz	clear_0
   116  000242                     end_of_initialization:
   117                           	callstack 0
   118  000242                     __end_of__initialization:
   119                           	callstack 0
   120  000242  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   121  000244  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   122  000246  0100               	movlb	0
   123  000248  EF7D  F000         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMRAM
   126  000001                     __pbssCOMRAM:
   127                           	callstack 0
   128  000001                     _can_rxbuff:
   129                           	callstack 0
   130  000001                     	ds	13
   131  00000E                     _ledLowTimer:
   132                           	callstack 0
   133  00000E                     	ds	2
   134  000010                     _ledHighTimer:
   135                           	callstack 0
   136  000010                     	ds	2
   137  000012                     _ledtimer:
   138                           	callstack 0
   139  000012                     	ds	2
   140  000014                     _canMessageFlag:
   141                           	callstack 0
   142  000014                     	ds	1
   143                           
   144                           	psect	cstackCOMRAM
   145  000015                     __pcstackCOMRAM:
   146                           	callstack 0
   147  000015                     ??_main:
   148  000015                     
   149                           ; 1 bytes @ 0x0
   150  000015                     	ds	2
   151                           
   152 ;;
   153 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   154 ;;
   155 ;; *************** function _main *****************
   156 ;; Defined at:
   157 ;;		line 128 in file "newmain.c"
   158 ;; Parameters:    Size  Location     Type
   159 ;;		None
   160 ;; Auto vars:     Size  Location     Type
   161 ;;		None
   162 ;; Return value:  Size  Location     Type
   163 ;;                  1    wreg      void 
   164 ;; Registers used:
   165 ;;		wreg, status,2, status,0, cstack
   166 ;; Tracked objects:
   167 ;;		On entry : 0/0
   168 ;;		On exit  : 0/0
   169 ;;		Unchanged: 0/0
   170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   173 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   175 ;;Total ram usage:        2 bytes
   176 ;; Hardware stack levels required when called: 2
   177 ;; This function calls:
   178 ;;		_can_init
   179 ;; This function is called by:
   180 ;;		Startup code after reset
   181 ;; This function uses a non-reentrant model
   182 ;;
   183                           
   184                           	psect	text0
   185  0000FA                     __ptext0:
   186                           	callstack 0
   187  0000FA                     _main:
   188                           	callstack 29
   189  0000FA                     
   190                           ;newmain.c: 130:     PIE5bits.RXB0IE = 1;
   191  0000FA  8076               	bsf	118,0,c	;volatile
   192                           
   193                           ;newmain.c: 131:     INTCONbits.GIE = 1;
   194  0000FC  8EF2               	bsf	242,7,c	;volatile
   195                           
   196                           ;newmain.c: 132:     INTCONbits.PEIE = 1;
   197  0000FE  8CF2               	bsf	242,6,c	;volatile
   198                           
   199                           ;newmain.c: 133:     TRISCbits.TRISC0 = 0;
   200  000100  9094               	bcf	148,0,c	;volatile
   201                           
   202                           ;newmain.c: 134:     TRISCbits.TRISC1 = 0;
   203  000102  9294               	bcf	148,1,c	;volatile
   204                           
   205                           ;newmain.c: 135:     TRISCbits.TRISC2 = 1;
   206  000104  8494               	bsf	148,2,c	;volatile
   207                           
   208                           ;newmain.c: 136:     TRISBbits.TRISB6 = 0;
   209  000106  9C93               	bcf	147,6,c	;volatile
   210                           
   211                           ;newmain.c: 137:     TRISBbits.TRISB7 = 0;
   212  000108  9E93               	bcf	147,7,c	;volatile
   213                           
   214                           ;newmain.c: 138:     LATCbits.LATC0 = 1;
   215  00010A  808B               	bsf	139,0,c	;volatile
   216                           
   217                           ;newmain.c: 139:     LATCbits.LATC1 = 1;
   218  00010C  828B               	bsf	139,1,c	;volatile
   219                           
   220                           ;newmain.c: 140:     LATBbits.LATB6 = 1;
   221  00010E  8C8A               	bsf	138,6,c	;volatile
   222                           
   223                           ;newmain.c: 141:     LATBbits.LATB7 = 1;
   224  000110  8E8A               	bsf	138,7,c	;volatile
   225                           
   226                           ;newmain.c: 142:     T0CONbits.TMR0ON = 0;
   227  000112  9ED5               	bcf	213,7,c	;volatile
   228                           
   229                           ;newmain.c: 143:     T0CONbits.T08BIT = 0;
   230  000114  9CD5               	bcf	213,6,c	;volatile
   231                           
   232                           ;newmain.c: 144:     T0CONbits.T0CS = 0;
   233  000116  9AD5               	bcf	213,5,c	;volatile
   234                           
   235                           ;newmain.c: 145:     T0CONbits.TMR0ON = 1;
   236  000118  8ED5               	bsf	213,7,c	;volatile
   237                           
   238                           ;newmain.c: 146:     INTCONbits.T0IE = 1;
   239  00011A  8AF2               	bsf	242,5,c	;volatile
   240  00011C                     
   241                           ;newmain.c: 147:     can_init();
   242  00011C  ECD0  F000         	call	_can_init	;wreg free
   243  000120                     l822:
   244                           
   245                           ;newmain.c: 150:     {;newmain.c: 151:         can_rxbuff.fullid = can_rxbuff.idh<<3;
   246  000120  5001               	movf	_can_rxbuff^0,w,c
   247  000122  6E15               	movwf	??_main^0,c
   248  000124  6A16               	clrf	(??_main+1)^0,c
   249  000126  90D8               	bcf	status,0,c
   250  000128  3615               	rlcf	??_main^0,f,c
   251  00012A  3616               	rlcf	(??_main+1)^0,f,c
   252  00012C  90D8               	bcf	status,0,c
   253  00012E  3615               	rlcf	??_main^0,f,c
   254  000130  3616               	rlcf	(??_main+1)^0,f,c
   255  000132  90D8               	bcf	status,0,c
   256  000134  3615               	rlcf	??_main^0,f,c
   257  000136  3616               	rlcf	(??_main+1)^0,f,c
   258  000138  C015  F003         	movff	??_main,_can_rxbuff+2
   259  00013C  C016  F004         	movff	??_main+1,_can_rxbuff+3
   260  000140                     
   261                           ;newmain.c: 152:         can_rxbuff.fullid = can_rxbuff.fullid | can_rxbuff.idl>>5;
   262  000140  C002  F015         	movff	_can_rxbuff+1,??_main
   263  000144  0E05               	movlw	5
   264  000146  6E16               	movwf	(??_main+1)^0,c
   265  000148                     u35:
   266  000148  90D8               	bcf	status,0,c
   267  00014A  3215               	rrcf	??_main^0,f,c
   268  00014C  2E16               	decfsz	(??_main+1)^0,f,c
   269  00014E  EFA4  F000         	goto	u35
   270  000152  5003               	movf	(_can_rxbuff+2)^0,w,c
   271  000154  1015               	iorwf	??_main^0,w,c
   272  000156  6E03               	movwf	(_can_rxbuff+2)^0,c
   273  000158  5004               	movf	(_can_rxbuff+3)^0,w,c
   274  00015A  6E04               	movwf	(_can_rxbuff+3)^0,c
   275  00015C                     
   276                           ;newmain.c: 154:         if(canMessageFlag)
   277  00015C  5014               	movf	_canMessageFlag^0,w,c
   278  00015E  B4D8               	btfsc	status,2,c
   279  000160  EFB4  F000         	goto	u41
   280  000164  EFB6  F000         	goto	u40
   281  000168                     u41:
   282  000168  EF90  F000         	goto	l822
   283  00016C                     u40:
   284  00016C                     
   285                           ;newmain.c: 155:         {;newmain.c: 156:             if( ( ledHighTimer + ledLowTimer 
      +                          ) == 0 )
   286  00016C  500E               	movf	_ledLowTimer^0,w,c
   287  00016E  2410               	addwf	_ledHighTimer^0,w,c
   288  000170  6E15               	movwf	??_main^0,c
   289  000172  500F               	movf	(_ledLowTimer+1)^0,w,c
   290  000174  2011               	addwfc	(_ledHighTimer+1)^0,w,c
   291  000176  6E16               	movwf	(??_main+1)^0,c
   292  000178  5015               	movf	??_main^0,w,c
   293  00017A  1016               	iorwf	(??_main+1)^0,w,c
   294  00017C  A4D8               	btfss	status,2,c
   295  00017E  EFC3  F000         	goto	u51
   296  000182  EFC5  F000         	goto	u50
   297  000186                     u51:
   298  000186  EFCA  F000         	goto	l118
   299  00018A                     u50:
   300  00018A                     
   301                           ;newmain.c: 157:             {;newmain.c: 158:                 LATCbits.LATC0 = 0;
   302  00018A  908B               	bcf	139,0,c	;volatile
   303  00018C                     
   304                           ;newmain.c: 159:                 ledHighTimer = 500;
   305  00018C  0E01               	movlw	1
   306  00018E  6E11               	movwf	(_ledHighTimer+1)^0,c
   307  000190  0EF4               	movlw	244
   308  000192  6E10               	movwf	_ledHighTimer^0,c
   309  000194                     l118:
   310                           
   311                           ;newmain.c: 161:             canMessageFlag = 0;
   312  000194  0E00               	movlw	0
   313  000196  6E14               	movwf	_canMessageFlag^0,c
   314  000198  EF90  F000         	goto	l822
   315  00019C  EF7B  F000         	goto	start
   316  0001A0                     __end_of_main:
   317                           	callstack 0
   318                           
   319 ;; *************** function _can_init *****************
   320 ;; Defined at:
   321 ;;		line 92 in file "newmain.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, status,2, status,0
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   339 ;;Total ram usage:        0 bytes
   340 ;; Hardware stack levels used: 1
   341 ;; Hardware stack levels required when called: 1
   342 ;; This function calls:
   343 ;;		Nothing
   344 ;; This function is called by:
   345 ;;		_main
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text1
   350  0001A0                     __ptext1:
   351                           	callstack 0
   352  0001A0                     _can_init:
   353                           	callstack 29
   354  0001A0                     
   355                           ;newmain.c: 95:     TRISBbits.TRISB2 = 0;
   356  0001A0  9493               	bcf	147,2,c	;volatile
   357                           
   358                           ;newmain.c: 96:     TRISBbits.TRISB3 = 1;
   359  0001A2  8693               	bsf	147,3,c	;volatile
   360  0001A4                     
   361                           ;newmain.c: 98:     CANCONbits.REQOP = 0b100;
   362  0001A4  506F               	movf	111,w,c	;volatile
   363  0001A6  0B1F               	andlw	-225
   364  0001A8  0980               	iorlw	128
   365  0001AA  6E6F               	movwf	111,c	;volatile
   366  0001AC                     l812:
   367  0001AC  506E               	movf	110,w,c	;volatile
   368  0001AE  0BE0               	andlw	224
   369  0001B0  0A80               	xorlw	128
   370  0001B2  A4D8               	btfss	status,2,c
   371  0001B4  EFDE  F000         	goto	u11
   372  0001B8  EFE0  F000         	goto	u10
   373  0001BC                     u11:
   374  0001BC  EFD6  F000         	goto	l812
   375  0001C0                     u10:
   376  0001C0                     
   377                           ;newmain.c: 100:     ECANCON = 0x00;
   378  0001C0  0E00               	movlw	0
   379  0001C2  6E72               	movwf	114,c	;volatile
   380                           
   381                           ;newmain.c: 101:     RXM0EIDH = 0x00;
   382  0001C4  0E00               	movlw	0
   383  0001C6  010E               	movlb	14	; () banked
   384  0001C8  6FFA               	movwf	250,b	;volatile
   385                           
   386                           ;newmain.c: 102:     RXM0EIDL = 0x00;
   387  0001CA  0E00               	movlw	0
   388  0001CC  6FFB               	movwf	251,b	;volatile
   389                           
   390                           ;newmain.c: 103:     RXM0SIDH = 0x00;
   391  0001CE  0E00               	movlw	0
   392  0001D0  6FF8               	movwf	248,b	;volatile
   393                           
   394                           ;newmain.c: 104:     RXM0SIDL = 0x00;
   395  0001D2  0E00               	movlw	0
   396  0001D4  6FF9               	movwf	249,b	;volatile
   397                           
   398                           ;newmain.c: 105:     RXM1EIDH = 0x00;
   399  0001D6  0E00               	movlw	0
   400  0001D8  6FFE               	movwf	254,b	;volatile
   401                           
   402                           ;newmain.c: 106:     RXM1EIDL = 0x00;
   403  0001DA  0E00               	movlw	0
   404  0001DC  6FFF               	movwf	255,b	;volatile
   405                           
   406                           ;newmain.c: 107:     RXM1SIDH = 0x00;
   407  0001DE  0E00               	movlw	0
   408  0001E0  6FFC               	movwf	252,b	;volatile
   409                           
   410                           ;newmain.c: 108:     RXM1SIDL = 0x00;
   411  0001E2  0E00               	movlw	0
   412  0001E4  6FFD               	movwf	253,b	;volatile
   413                           
   414                           ;newmain.c: 109:     RXF0EIDH = 0x00;
   415  0001E6  0E00               	movlw	0
   416  0001E8  6FE2               	movwf	226,b	;volatile
   417                           
   418                           ;newmain.c: 110:     RXF0EIDL = 0x00;
   419  0001EA  0E00               	movlw	0
   420  0001EC  6FE3               	movwf	227,b	;volatile
   421                           
   422                           ;newmain.c: 111:     RXF0SIDH = 0x00;
   423  0001EE  0E00               	movlw	0
   424  0001F0  6FE0               	movwf	224,b	;volatile
   425                           
   426                           ;newmain.c: 112:     RXF0SIDL = 0x00;
   427  0001F2  0E00               	movlw	0
   428  0001F4  6FE1               	movwf	225,b	;volatile
   429                           
   430                           ;newmain.c: 113:     RXF1EIDH = 0x00;
   431  0001F6  0E00               	movlw	0
   432  0001F8  6FE6               	movwf	230,b	;volatile
   433                           
   434                           ;newmain.c: 114:     RXF1EIDL = 0x00;
   435  0001FA  0E00               	movlw	0
   436  0001FC  6FE7               	movwf	231,b	;volatile
   437                           
   438                           ;newmain.c: 115:     RXF1SIDH = 0x00;
   439  0001FE  0E00               	movlw	0
   440  000200  6FE4               	movwf	228,b	;volatile
   441                           
   442                           ;newmain.c: 116:     RXF1SIDL = 0x00;
   443  000202  0E00               	movlw	0
   444  000204  6FE5               	movwf	229,b	;volatile
   445                           
   446                           ;newmain.c: 119:     BRGCON1 = 0x01;
   447  000206  0E01               	movlw	1
   448  000208  6F43               	movwf	67,b	;volatile
   449                           
   450                           ;newmain.c: 120:     BRGCON2 = 0x98;
   451  00020A  0E98               	movlw	152
   452  00020C  6F44               	movwf	68,b	;volatile
   453                           
   454                           ;newmain.c: 121:     BRGCON3 = 0x01;
   455  00020E  0E01               	movlw	1
   456  000210  6F45               	movwf	69,b	;volatile
   457                           
   458                           ;newmain.c: 123:     ECANCONbits.MDSEL = 0b00;
   459  000212  0E3F               	movlw	-193
   460  000214  1672               	andwf	114,f,c	;volatile
   461                           
   462                           ;newmain.c: 124:     CANCONbits.REQOP = 0b011;
   463  000216  506F               	movf	111,w,c	;volatile
   464  000218  0B1F               	andlw	-225
   465  00021A  0960               	iorlw	96
   466  00021C  6E6F               	movwf	111,c	;volatile
   467  00021E                     l816:
   468  00021E  386E               	swapf	110,w,c	;volatile
   469  000220  32E8               	rrcf	wreg,f,c
   470  000222  0B07               	andlw	7
   471  000224  0A03               	xorlw	3
   472  000226  A4D8               	btfss	status,2,c
   473  000228  EF18  F001         	goto	u21
   474  00022C  EF1A  F001         	goto	u20
   475  000230                     u21:
   476  000230  EF0F  F001         	goto	l816
   477  000234                     u20:
   478  000234  0012               	return		;funcret
   479  000236                     __end_of_can_init:
   480                           	callstack 0
   481                           
   482 ;; *************** function _myISR *****************
   483 ;; Defined at:
   484 ;;		line 228 in file "newmain.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		Interrupt level 2
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	intcode
   512  000008                     __pintcode:
   513                           	callstack 0
   514  000008                     _myISR:
   515                           	callstack 29
   516                           
   517                           ;incstack = 0
   518  000008  8217               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   519  00000A                     
   520                           ;newmain.c: 231:  if (PIR5bits.RXB0IF && PIE5bits.RXB0IE)
   521  00000A  A077               	btfss	119,0,c	;volatile
   522  00000C  EF0A  F000         	goto	i2u6_41
   523  000010  EF0C  F000         	goto	i2u6_40
   524  000014                     i2u6_41:
   525  000014  EF2E  F000         	goto	i2l846
   526  000018                     i2u6_40:
   527  000018  A076               	btfss	118,0,c	;volatile
   528  00001A  EF11  F000         	goto	i2u7_41
   529  00001E  EF13  F000         	goto	i2u7_40
   530  000022                     i2u7_41:
   531  000022  EF2E  F000         	goto	i2l846
   532  000026                     i2u7_40:
   533  000026                     
   534                           ;newmain.c: 232:   {;newmain.c: 233:   PIR5bits.RXB0IF = 0;
   535  000026  9077               	bcf	119,0,c	;volatile
   536                           
   537                           ;newmain.c: 235:   can_rxbuff.d0 = RXB0D0;
   538  000028  CF66 F006          	movff	3942,_can_rxbuff+5	;volatile
   539                           
   540                           ;newmain.c: 236:   can_rxbuff.d1 = RXB0D1;
   541  00002C  CF67 F007          	movff	3943,_can_rxbuff+6	;volatile
   542                           
   543                           ;newmain.c: 237:   can_rxbuff.d2 = RXB0D2;
   544  000030  CF68 F008          	movff	3944,_can_rxbuff+7	;volatile
   545                           
   546                           ;newmain.c: 238:   can_rxbuff.d3 = RXB0D3;
   547  000034  CF69 F009          	movff	3945,_can_rxbuff+8	;volatile
   548                           
   549                           ;newmain.c: 239:         can_rxbuff.d4 = RXB0D4;
   550  000038  CF6A F00A          	movff	3946,_can_rxbuff+9	;volatile
   551                           
   552                           ;newmain.c: 240:         can_rxbuff.d5 = RXB0D5;
   553  00003C  CF6B F00B          	movff	3947,_can_rxbuff+10	;volatile
   554                           
   555                           ;newmain.c: 241:         can_rxbuff.d6 = RXB0D6;
   556  000040  CF6C F00C          	movff	3948,_can_rxbuff+11	;volatile
   557                           
   558                           ;newmain.c: 242:         can_rxbuff.d7 = RXB0D7;
   559  000044  CF6D F00D          	movff	3949,_can_rxbuff+12	;volatile
   560                           
   561                           ;newmain.c: 243:   can_rxbuff.dl = RXB0DLC;
   562  000048  CF65 F005          	movff	3941,_can_rxbuff+4	;volatile
   563                           
   564                           ;newmain.c: 244:         can_rxbuff.idh = RXB0SIDH;
   565  00004C  CF61 F001          	movff	3937,_can_rxbuff	;volatile
   566  000050                     
   567                           ;newmain.c: 245:         can_rxbuff.idl = (RXB0SIDL&0xe0);
   568  000050  5062               	movf	98,w,c	;volatile
   569  000052  0BE0               	andlw	224
   570  000054  6E02               	movwf	(_can_rxbuff+1)^0,c
   571  000056                     
   572                           ;newmain.c: 246:         canMessageFlag = 1;
   573  000056  0E01               	movlw	1
   574  000058  6E14               	movwf	_canMessageFlag^0,c
   575  00005A                     
   576                           ;newmain.c: 248:         RXB0CONbits.RXFUL = 0;
   577  00005A  9E60               	bcf	96,7,c	;volatile
   578  00005C                     i2l846:
   579                           
   580                           ;newmain.c: 250:     if(INTCONbits.T0IE && INTCONbits.TMR0IF)
   581  00005C  AAF2               	btfss	242,5,c	;volatile
   582  00005E  EF33  F000         	goto	i2u8_41
   583  000062  EF35  F000         	goto	i2u8_40
   584  000066                     i2u8_41:
   585  000066  EF79  F000         	goto	i2l132
   586  00006A                     i2u8_40:
   587  00006A  A4F2               	btfss	242,2,c	;volatile
   588  00006C  EF3A  F000         	goto	i2u9_41
   589  000070  EF3C  F000         	goto	i2u9_40
   590  000074                     i2u9_41:
   591  000074  EF79  F000         	goto	i2l132
   592  000078                     i2u9_40:
   593  000078                     
   594                           ;newmain.c: 251:     {;newmain.c: 252:         ledtimer++;
   595  000078  4A12               	infsnz	_ledtimer^0,f,c
   596  00007A  2A13               	incf	(_ledtimer+1)^0,f,c
   597  00007C                     
   598                           ;newmain.c: 253:         if(ledtimer > 500)
   599  00007C  0EF5               	movlw	245
   600  00007E  5C12               	subwf	_ledtimer^0,w,c
   601  000080  0E01               	movlw	1
   602  000082  5813               	subwfb	(_ledtimer+1)^0,w,c
   603  000084  A0D8               	btfss	status,0,c
   604  000086  EF47  F000         	goto	i2u10_41
   605  00008A  EF49  F000         	goto	i2u10_40
   606  00008E                     i2u10_41:
   607  00008E  EF4E  F000         	goto	i2l858
   608  000092                     i2u10_40:
   609  000092                     
   610                           ;newmain.c: 254:         {;newmain.c: 255:             LATBbits.LATB7 ^= 1;
   611  000092  7E8A               	btg	138,7,c	;volatile
   612  000094                     
   613                           ;newmain.c: 258:             ledtimer = 0;
   614  000094  0E00               	movlw	0
   615  000096  6E13               	movwf	(_ledtimer+1)^0,c
   616  000098  0E00               	movlw	0
   617  00009A  6E12               	movwf	_ledtimer^0,c
   618  00009C                     i2l858:
   619                           
   620                           ;newmain.c: 260:         if(ledHighTimer > 0)
   621  00009C  5010               	movf	_ledHighTimer^0,w,c
   622  00009E  1011               	iorwf	(_ledHighTimer+1)^0,w,c
   623  0000A0  B4D8               	btfsc	status,2,c
   624  0000A2  EF55  F000         	goto	i2u11_41
   625  0000A6  EF57  F000         	goto	i2u11_40
   626  0000AA                     i2u11_41:
   627  0000AA  EF68  F000         	goto	i2l868
   628  0000AE                     i2u11_40:
   629  0000AE                     
   630                           ;newmain.c: 261:         {;newmain.c: 262:             ledHighTimer--;
   631  0000AE  0610               	decf	_ledHighTimer^0,f,c
   632  0000B0  A0D8               	btfss	status,0,c
   633  0000B2  0611               	decf	(_ledHighTimer+1)^0,f,c
   634  0000B4                     
   635                           ;newmain.c: 263:             if(ledHighTimer == 0)
   636  0000B4  5010               	movf	_ledHighTimer^0,w,c
   637  0000B6  1011               	iorwf	(_ledHighTimer+1)^0,w,c
   638  0000B8  A4D8               	btfss	status,2,c
   639  0000BA  EF61  F000         	goto	i2u12_41
   640  0000BE  EF63  F000         	goto	i2u12_40
   641  0000C2                     i2u12_41:
   642  0000C2  EF68  F000         	goto	i2l868
   643  0000C6                     i2u12_40:
   644  0000C6                     
   645                           ;newmain.c: 264:             {;newmain.c: 265:                 ledLowTimer = 500;
   646  0000C6  0E01               	movlw	1
   647  0000C8  6E0F               	movwf	(_ledLowTimer+1)^0,c
   648  0000CA  0EF4               	movlw	244
   649  0000CC  6E0E               	movwf	_ledLowTimer^0,c
   650  0000CE                     
   651                           ;newmain.c: 266:                 LATCbits.LATC0 = 1;
   652  0000CE  808B               	bsf	139,0,c	;volatile
   653  0000D0                     i2l868:
   654                           
   655                           ;newmain.c: 269:         if(ledLowTimer > 0)
   656  0000D0  500E               	movf	_ledLowTimer^0,w,c
   657  0000D2  100F               	iorwf	(_ledLowTimer+1)^0,w,c
   658  0000D4  B4D8               	btfsc	status,2,c
   659  0000D6  EF6F  F000         	goto	i2u13_41
   660  0000DA  EF71  F000         	goto	i2u13_40
   661  0000DE                     i2u13_41:
   662  0000DE  EF74  F000         	goto	i2l872
   663  0000E2                     i2u13_40:
   664  0000E2                     
   665                           ;newmain.c: 270:         {;newmain.c: 271:             ledLowTimer--;
   666  0000E2  060E               	decf	_ledLowTimer^0,f,c
   667  0000E4  A0D8               	btfss	status,0,c
   668  0000E6  060F               	decf	(_ledLowTimer+1)^0,f,c
   669  0000E8                     i2l872:
   670                           
   671                           ;newmain.c: 274:         TMR0H = 0xf8;
   672  0000E8  0EF8               	movlw	248
   673  0000EA  6ED7               	movwf	215,c	;volatile
   674  0000EC                     
   675                           ;newmain.c: 275:         TMR0L = 0x2F;
   676  0000EC  0E2F               	movlw	47
   677  0000EE  6ED6               	movwf	214,c	;volatile
   678  0000F0                     
   679                           ;newmain.c: 276:         INTCONbits.TMR0IF = 0;
   680  0000F0  94F2               	bcf	242,2,c	;volatile
   681  0000F2                     i2l132:
   682  0000F2  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   683  0000F4  0011               	retfie		f
   684  0000F6                     __end_of_myISR:
   685                           	callstack 0
   686  0000                     
   687                           	psect	rparam
   688  0000                     
   689                           	psect	temp
   690  000017                     btemp:
   691                           	callstack 0
   692  000017                     	ds	1
   693  0000                     int$flags	set	btemp
   694  0000                     wtemp8	set	btemp+1
   695  0000                     ttemp5	set	btemp+1
   696  0000                     ttemp6	set	btemp+4
   697  0000                     ttemp7	set	btemp+8
   698                           
   699                           	psect	idloc
   700                           
   701                           ;Config register IDLOC0 @ 0x200000
   702                           ;	unspecified, using default values
   703  200000                     	org	2097152
   704  200000  FF                 	db	255
   705                           
   706                           ;Config register IDLOC1 @ 0x200001
   707                           ;	unspecified, using default values
   708  200001                     	org	2097153
   709  200001  FF                 	db	255
   710                           
   711                           ;Config register IDLOC2 @ 0x200002
   712                           ;	unspecified, using default values
   713  200002                     	org	2097154
   714  200002  FF                 	db	255
   715                           
   716                           ;Config register IDLOC3 @ 0x200003
   717                           ;	unspecified, using default values
   718  200003                     	org	2097155
   719  200003  FF                 	db	255
   720                           
   721                           ;Config register IDLOC4 @ 0x200004
   722                           ;	unspecified, using default values
   723  200004                     	org	2097156
   724  200004  FF                 	db	255
   725                           
   726                           ;Config register IDLOC5 @ 0x200005
   727                           ;	unspecified, using default values
   728  200005                     	org	2097157
   729  200005  FF                 	db	255
   730                           
   731                           ;Config register IDLOC6 @ 0x200006
   732                           ;	unspecified, using default values
   733  200006                     	org	2097158
   734  200006  FF                 	db	255
   735                           
   736                           ;Config register IDLOC7 @ 0x200007
   737                           ;	unspecified, using default values
   738  200007                     	org	2097159
   739  200007  FF                 	db	255
   740                           
   741                           	psect	config
   742                           
   743                           ;Config register CONFIG1L @ 0x300000
   744                           ;	VREG Sleep Enable bit
   745                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
   746                           ;	LF-INTOSC Low-power Enable bit
   747                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
   748                           ;	SOSC Power Selection and mode Configuration bits
   749                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
   750                           ;	Extended Instruction Set
   751                           ;	XINST = OFF, Disabled
   752  300000                     	org	3145728
   753  300000  15                 	db	21
   754                           
   755                           ;Config register CONFIG1H @ 0x300001
   756                           ;	Oscillator
   757                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
   758                           ;	PLL x4 Enable bit
   759                           ;	PLLCFG = ON, Enabled
   760                           ;	Fail-Safe Clock Monitor
   761                           ;	FCMEN = ON, Enabled
   762                           ;	Internal External Oscillator Switch Over Mode
   763                           ;	IESO = ON, Enabled
   764  300001                     	org	3145729
   765  300001  D3                 	db	211
   766                           
   767                           ;Config register CONFIG2L @ 0x300002
   768                           ;	Power Up Timer
   769                           ;	PWRTEN = ON, Enabled
   770                           ;	Brown Out Detect
   771                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
   772                           ;	Brown-out Reset Voltage bits
   773                           ;	BORV = 3, 1.8V
   774                           ;	BORMV Power level
   775                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
   776  300002                     	org	3145730
   777  300002  7E                 	db	126
   778                           
   779                           ;Config register CONFIG2H @ 0x300003
   780                           ;	Watchdog Timer
   781                           ;	WDTEN = SWDTDIS, WDT enabled in hardware; SWDTEN bit disabled
   782                           ;	Watchdog Postscaler
   783                           ;	WDTPS = 1048576, 1:1048576
   784  300003                     	org	3145731
   785  300003  7F                 	db	127
   786                           
   787                           ; Padding undefined space
   788  300004                     	org	3145732
   789  300004  FF                 	db	255
   790                           
   791                           ;Config register CONFIG3H @ 0x300005
   792                           ;	ECAN Mux bit
   793                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
   794                           ;	MSSP address masking
   795                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
   796                           ;	Master Clear Enable
   797                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
   798  300005                     	org	3145733
   799  300005  89                 	db	137
   800                           
   801                           ;Config register CONFIG4L @ 0x300006
   802                           ;	Stack Overflow Reset
   803                           ;	STVREN = ON, Enabled
   804                           ;	Boot Block Size
   805                           ;	BBSIZ = BB2K, 2K word Boot Block size
   806  300006                     	org	3145734
   807  300006  91                 	db	145
   808                           
   809                           ; Padding undefined space
   810  300007                     	org	3145735
   811  300007  FF                 	db	255
   812                           
   813                           ;Config register CONFIG5L @ 0x300008
   814                           ;	Code Protect 00800-03FFF
   815                           ;	CP0 = OFF, Disabled
   816                           ;	Code Protect 04000-07FFF
   817                           ;	CP1 = OFF, Disabled
   818                           ;	Code Protect 08000-0BFFF
   819                           ;	CP2 = OFF, Disabled
   820                           ;	Code Protect 0C000-0FFFF
   821                           ;	CP3 = OFF, Disabled
   822  300008                     	org	3145736
   823  300008  0F                 	db	15
   824                           
   825                           ;Config register CONFIG5H @ 0x300009
   826                           ;	Code Protect Boot
   827                           ;	CPB = OFF, Disabled
   828                           ;	Data EE Read Protect
   829                           ;	CPD = OFF, Disabled
   830  300009                     	org	3145737
   831  300009  C0                 	db	192
   832                           
   833                           ;Config register CONFIG6L @ 0x30000A
   834                           ;	Table Write Protect 00800-03FFF
   835                           ;	WRT0 = OFF, Disabled
   836                           ;	Table Write Protect 04000-07FFF
   837                           ;	WRT1 = OFF, Disabled
   838                           ;	Table Write Protect 08000-0BFFF
   839                           ;	WRT2 = OFF, Disabled
   840                           ;	Table Write Protect 0C000-0FFFF
   841                           ;	WRT3 = OFF, Disabled
   842  30000A                     	org	3145738
   843  30000A  0F                 	db	15
   844                           
   845                           ;Config register CONFIG6H @ 0x30000B
   846                           ;	Config. Write Protect
   847                           ;	WRTC = OFF, Disabled
   848                           ;	Table Write Protect Boot
   849                           ;	WRTB = OFF, Disabled
   850                           ;	Data EE Write Protect
   851                           ;	WRTD = OFF, Disabled
   852  30000B                     	org	3145739
   853  30000B  E0                 	db	224
   854                           
   855                           ;Config register CONFIG7L @ 0x30000C
   856                           ;	Table Read Protect 00800-03FFF
   857                           ;	EBTR0 = OFF, Disabled
   858                           ;	Table Read Protect 04000-07FFF
   859                           ;	EBTR1 = OFF, Disabled
   860                           ;	Table Read Protect 08000-0BFFF
   861                           ;	EBTR2 = OFF, Disabled
   862                           ;	Table Read Protect 0C000-0FFFF
   863                           ;	EBTR3 = OFF, Disabled
   864  30000C                     	org	3145740
   865  30000C  0F                 	db	15
   866                           
   867                           ;Config register CONFIG7H @ 0x30000D
   868                           ;	Table Read Protect Boot
   869                           ;	EBTRB = OFF, Disabled
   870  30000D                     	org	3145741
   871  30000D  40                 	db	64
   872                           tosu	equ	0xFFF
   873                           tosh	equ	0xFFE
   874                           tosl	equ	0xFFD
   875                           stkptr	equ	0xFFC
   876                           pclatu	equ	0xFFB
   877                           pclath	equ	0xFFA
   878                           pcl	equ	0xFF9
   879                           tblptru	equ	0xFF8
   880                           tblptrh	equ	0xFF7
   881                           tblptrl	equ	0xFF6
   882                           tablat	equ	0xFF5
   883                           prodh	equ	0xFF4
   884                           prodl	equ	0xFF3
   885                           indf0	equ	0xFEF
   886                           postinc0	equ	0xFEE
   887                           postdec0	equ	0xFED
   888                           preinc0	equ	0xFEC
   889                           plusw0	equ	0xFEB
   890                           fsr0h	equ	0xFEA
   891                           fsr0l	equ	0xFE9
   892                           wreg	equ	0xFE8
   893                           indf1	equ	0xFE7
   894                           postinc1	equ	0xFE6
   895                           postdec1	equ	0xFE5
   896                           preinc1	equ	0xFE4
   897                           plusw1	equ	0xFE3
   898                           fsr1h	equ	0xFE2
   899                           fsr1l	equ	0xFE1
   900                           bsr	equ	0xFE0
   901                           indf2	equ	0xFDF
   902                           postinc2	equ	0xFDE
   903                           postdec2	equ	0xFDD
   904                           preinc2	equ	0xFDC
   905                           plusw2	equ	0xFDB
   906                           fsr2h	equ	0xFDA
   907                           fsr2l	equ	0xFD9
   908                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                           _can_init
 ---------------------------------------------------------------------------------
 (1) _can_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myISR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_init

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2      16       1       23.4%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16       6        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 27 22:44:03 2023

                     u10 01C0                       u11 01BC                       u20 0234  
                     u21 0230                       u40 016C                       u41 0168  
                     u50 018A                       u51 0186                       u35 0148  
                    l111 0234                      l118 0194                      l810 01A4  
                    l812 01AC                      l820 011C                      l814 01C0  
                    l830 018A                      l822 0120                      l816 021E  
                    l808 01A0                      l832 018C                      l824 0140  
                    l826 015C                      l818 00FA                      l828 016C  
                    wreg 000FE8                     _main 00FA                     btemp 0017  
                   start 00F6             ___param_bank 000000                    ?_main 0015  
                  i2l132 00F2                    i2l840 0050                    i2l850 0078  
                  i2l842 0056                    i2l834 000A                    i2l860 00AE  
                  i2l852 007C                    i2l844 005A                    i2l836 0018  
                  i2l870 00E2                    i2l862 00B4                    i2l854 0092  
                  i2l838 0026                    i2l846 005C                    i2l872 00E8  
                  i2l864 00C6                    i2l856 0094                    i2l848 006A  
                  i2l874 00EC                    i2l866 00CE                    i2l858 009C  
                  i2l876 00F0                    i2l868 00D0                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _myISR 0008                    ttemp5 0018  
                  ttemp6 001B                    ttemp7 001F                    status 000FD8  
                  wtemp8 0018          __initialization 0236             __end_of_main 01A0  
                 ??_main 0015            __activetblptr 000000                   ?_myISR 0015  
                 _RXB0D0 000F66                   _RXB0D1 000F67                   _RXB0D2 000F68  
                 _RXB0D3 000F69                   _RXB0D4 000F6A                   _RXB0D5 000F6B  
                 _RXB0D6 000F6C                   _RXB0D7 000F6D         __end_of_can_init 0236  
                 i2u6_40 0018                   i2u6_41 0014                   i2u7_40 0026  
                 i2u7_41 0022                   i2u8_40 006A                   i2u8_41 0066  
                 i2u9_40 0078                   i2u9_41 0074                   clear_0 023C  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 0242  
          ___rparam_used 000001           __pcstackCOMRAM 0015            __end_of_myISR 00F6  
                ??_myISR 0015               _can_rxbuff 0001                  _ECANCON 000F72  
                _CANSTAT 000F6E                  _BRGCON1 000E43                  _BRGCON2 000E44  
                _BRGCON3 000E45                ?_can_init 0015                  i2u10_40 0092  
                i2u10_41 008E                  i2u11_40 00AE                  i2u11_41 00AA  
                i2u12_40 00C6                  i2u12_41 00C2                  i2u13_40 00E2  
                i2u13_41 00DE                  _RXB0DLC 000F65             _ledHighTimer 0010  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0236  
                __ramtop 0F00                  __ptext0 00FA                  __ptext1 01A0  
              _T0CONbits 000FD5               ??_can_init 0015     end_of_initialization 0242  
                postinc0 000FEE                _TRISBbits 000F93                _TRISCbits 000F94  
         _canMessageFlag 0014              _ECANCONbits 000F72      start_initialization 0236  
            _CANSTATbits 000F6E              __pbssCOMRAM 0001        __size_of_can_init 0096  
              __pintcode 0008           __size_of_myISR 00EE              _ledLowTimer 000E  
               _LATBbits 000F8A                 _LATCbits 000F8B                 _PIE5bits 000F76  
               _PIR5bits 000F77                 _RXB0SIDH 000F61                 _RXB0SIDL 000F62  
               _RXF0EIDH 000EE2                 _RXF0EIDL 000EE3                 _RXF1EIDH 000EE6  
               _RXF1EIDL 000EE7                 _RXF0SIDH 000EE0                 _RXF0SIDL 000EE1  
               _RXF1SIDH 000EE4                 _RXF1SIDL 000EE5                 _RXM0EIDH 000EFA  
               _RXM0EIDL 000EFB                 _RXM1EIDH 000EFE                 _RXM1EIDL 000EFF  
               _RXM0SIDH 000EF8                 _RXM0SIDL 000EF9                 _RXM1SIDH 000EFC  
               _RXM1SIDL 000EFD               _CANCONbits 000F6F                 __Hrparam 0000  
               __Lrparam 0000                 _can_init 01A0                 _ledtimer 0012  
          __size_of_main 00A6                 isa$xinst 000000                 int$flags 0017  
            _RXB0CONbits 000F60               _INTCONbits 000FF2                 intlevel2 0000  
