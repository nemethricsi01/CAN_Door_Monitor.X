

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jul 02 15:55:35 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F25K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.35
    18                           ; Generated 05/05/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F25K80 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _BRGCON3	set	3653
    53  0000                     _BRGCON2	set	3652
    54  0000                     _BRGCON1	set	3651
    55  0000                     _RXF1SIDL	set	3813
    56  0000                     _RXF1SIDH	set	3812
    57  0000                     _RXF1EIDL	set	3815
    58  0000                     _RXF1EIDH	set	3814
    59  0000                     _RXF0SIDL	set	3809
    60  0000                     _RXF0SIDH	set	3808
    61  0000                     _RXF0EIDL	set	3811
    62  0000                     _RXF0EIDH	set	3810
    63  0000                     _RXM1SIDL	set	3837
    64  0000                     _RXM1SIDH	set	3836
    65  0000                     _RXM1EIDL	set	3839
    66  0000                     _RXM1EIDH	set	3838
    67  0000                     _RXM0SIDL	set	3833
    68  0000                     _RXM0SIDH	set	3832
    69  0000                     _RXM0EIDL	set	3835
    70  0000                     _RXM0EIDH	set	3834
    71  0000                     _TMR0L	set	4054
    72  0000                     _TMR0H	set	4055
    73  0000                     _RXB0CONbits	set	3936
    74  0000                     _RXB0SIDL	set	3938
    75  0000                     _RXB0SIDH	set	3937
    76  0000                     _RXB0DLC	set	3941
    77  0000                     _RXB0D7	set	3949
    78  0000                     _RXB0D6	set	3948
    79  0000                     _RXB0D5	set	3947
    80  0000                     _RXB0D4	set	3946
    81  0000                     _RXB0D3	set	3945
    82  0000                     _RXB0D2	set	3944
    83  0000                     _RXB0D1	set	3943
    84  0000                     _RXB0D0	set	3942
    85  0000                     _PIR5bits	set	3959
    86  0000                     _T0CONbits	set	4053
    87  0000                     _LATBbits	set	3978
    88  0000                     _TRISCbits	set	3988
    89  0000                     _INTCONbits	set	4082
    90  0000                     _PIE5bits	set	3958
    91  0000                     _CANSTATbits	set	3950
    92  0000                     _ECANCONbits	set	3954
    93  0000                     _ECANCON	set	3954
    94  0000                     _CANSTAT	set	3950
    95  0000                     _CANCONbits	set	3951
    96  0000                     _TRISBbits	set	3987
    97                           
    98                           ; #config settings
    99                           
   100                           	psect	cinit
   101  0002F6                     __pcinit:
   102                           	callstack 0
   103  0002F6                     start_initialization:
   104                           	callstack 0
   105  0002F6                     __initialization:
   106                           	callstack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (24 bytes)
   109  0002F6  EE00  F001         	lfsr	0,__pbssCOMRAM
   110  0002FA  0E18               	movlw	24
   111  0002FC                     clear_0:
   112  0002FC  6AEE               	clrf	postinc0,c
   113  0002FE  06E8               	decf	wreg,f,c
   114  000300  E1FD               	bnz	clear_0
   115  000302                     end_of_initialization:
   116                           	callstack 0
   117  000302                     __end_of__initialization:
   118                           	callstack 0
   119  000302  901B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120  000304  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121  000306  0100               	movlb	0
   122  000308  EFA9  F000         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	bssCOMRAM
   125  000001                     __pbssCOMRAM:
   126                           	callstack 0
   127  000001                     _can_rxbuff:
   128                           	callstack 0
   129  000001                     	ds	13
   130  00000E                     _brakeTimer:
   131                           	callstack 0
   132  00000E                     	ds	2
   133  000010                     _ignTimer:
   134                           	callstack 0
   135  000010                     	ds	2
   136  000012                     _ledLowTimer:
   137                           	callstack 0
   138  000012                     	ds	2
   139  000014                     _ledHighTimer:
   140                           	callstack 0
   141  000014                     	ds	2
   142  000016                     _ledtimer:
   143                           	callstack 0
   144  000016                     	ds	2
   145  000018                     _canMessageFlag:
   146                           	callstack 0
   147  000018                     	ds	1
   148                           
   149                           	psect	cstackCOMRAM
   150  000019                     __pcstackCOMRAM:
   151                           	callstack 0
   152  000019                     ??_main:
   153  000019                     
   154                           ; 1 bytes @ 0x0
   155  000019                     	ds	2
   156                           
   157 ;;
   158 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   159 ;;
   160 ;; *************** function _main *****************
   161 ;; Defined at:
   162 ;;		line 133 in file "newmain.c"
   163 ;; Parameters:    Size  Location     Type
   164 ;;		None
   165 ;; Auto vars:     Size  Location     Type
   166 ;;		None
   167 ;; Return value:  Size  Location     Type
   168 ;;                  1    wreg      void 
   169 ;; Registers used:
   170 ;;		wreg, status,2, status,0, cstack
   171 ;; Tracked objects:
   172 ;;		On entry : 0/0
   173 ;;		On exit  : 0/0
   174 ;;		Unchanged: 0/0
   175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   178 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   180 ;;Total ram usage:        2 bytes
   181 ;; Hardware stack levels required when called: 2
   182 ;; This function calls:
   183 ;;		_can_init
   184 ;; This function is called by:
   185 ;;		Startup code after reset
   186 ;; This function uses a non-reentrant model
   187 ;;
   188                           
   189                           	psect	text0
   190  000152                     __ptext0:
   191                           	callstack 0
   192  000152                     _main:
   193                           	callstack 29
   194  000152                     
   195                           ;newmain.c: 135:     PIE5bits.RXB0IE = 1;
   196  000152  8076               	bsf	118,0,c	;volatile
   197                           
   198                           ;newmain.c: 136:     INTCONbits.GIE = 1;
   199  000154  8EF2               	bsf	242,7,c	;volatile
   200                           
   201                           ;newmain.c: 137:     INTCONbits.PEIE = 1;
   202  000156  8CF2               	bsf	242,6,c	;volatile
   203                           
   204                           ;newmain.c: 138:     TRISBbits.TRISB7 = 0;
   205  000158  9E93               	bcf	147,7,c	;volatile
   206                           
   207                           ;newmain.c: 139:     TRISBbits.TRISB6 = 0;
   208  00015A  9C93               	bcf	147,6,c	;volatile
   209                           
   210                           ;newmain.c: 140:     TRISCbits.TRISC2 = 1;
   211  00015C  8494               	bsf	148,2,c	;volatile
   212                           
   213                           ;newmain.c: 141:     TRISBbits.TRISB5 = 0;
   214  00015E  9A93               	bcf	147,5,c	;volatile
   215                           
   216                           ;newmain.c: 142:     TRISBbits.TRISB4 = 0;
   217  000160  9893               	bcf	147,4,c	;volatile
   218                           
   219                           ;newmain.c: 143:     LATBbits.LATB7 = 1;
   220  000162  8E8A               	bsf	138,7,c	;volatile
   221                           
   222                           ;newmain.c: 144:     LATBbits.LATB6 = 1;
   223  000164  8C8A               	bsf	138,6,c	;volatile
   224                           
   225                           ;newmain.c: 145:     LATBbits.LATB5 = 1;
   226  000166  8A8A               	bsf	138,5,c	;volatile
   227                           
   228                           ;newmain.c: 146:     LATBbits.LATB4 = 1;
   229  000168  888A               	bsf	138,4,c	;volatile
   230                           
   231                           ;newmain.c: 147:     T0CONbits.TMR0ON = 0;
   232  00016A  9ED5               	bcf	213,7,c	;volatile
   233                           
   234                           ;newmain.c: 148:     T0CONbits.T08BIT = 0;
   235  00016C  9CD5               	bcf	213,6,c	;volatile
   236                           
   237                           ;newmain.c: 149:     T0CONbits.T0CS = 0;
   238  00016E  9AD5               	bcf	213,5,c	;volatile
   239                           
   240                           ;newmain.c: 150:     T0CONbits.TMR0ON = 1;
   241  000170  8ED5               	bsf	213,7,c	;volatile
   242                           
   243                           ;newmain.c: 151:     INTCONbits.T0IE = 1;
   244  000172  8AF2               	bsf	242,5,c	;volatile
   245  000174                     
   246                           ;newmain.c: 152:     can_init();
   247  000174  EC30  F001         	call	_can_init	;wreg free
   248  000178                     l832:
   249                           
   250                           ;newmain.c: 155:     {;newmain.c: 156:         can_rxbuff.fullid = can_rxbuff.idh<<3;
   251  000178  5001               	movf	_can_rxbuff^0,w,c
   252  00017A  6E19               	movwf	??_main^0,c
   253  00017C  6A1A               	clrf	(??_main+1)^0,c
   254  00017E  90D8               	bcf	status,0,c
   255  000180  3619               	rlcf	??_main^0,f,c
   256  000182  361A               	rlcf	(??_main+1)^0,f,c
   257  000184  90D8               	bcf	status,0,c
   258  000186  3619               	rlcf	??_main^0,f,c
   259  000188  361A               	rlcf	(??_main+1)^0,f,c
   260  00018A  90D8               	bcf	status,0,c
   261  00018C  3619               	rlcf	??_main^0,f,c
   262  00018E  361A               	rlcf	(??_main+1)^0,f,c
   263  000190  C019  F003         	movff	??_main,_can_rxbuff+2
   264  000194  C01A  F004         	movff	??_main+1,_can_rxbuff+3
   265  000198                     
   266                           ;newmain.c: 157:         can_rxbuff.fullid = can_rxbuff.fullid | can_rxbuff.idl>>5;
   267  000198  C002  F019         	movff	_can_rxbuff+1,??_main
   268  00019C  0E05               	movlw	5
   269  00019E  6E1A               	movwf	(??_main+1)^0,c
   270  0001A0                     u35:
   271  0001A0  90D8               	bcf	status,0,c
   272  0001A2  3219               	rrcf	??_main^0,f,c
   273  0001A4  2E1A               	decfsz	(??_main+1)^0,f,c
   274  0001A6  EFD0  F000         	goto	u35
   275  0001AA  5003               	movf	(_can_rxbuff+2)^0,w,c
   276  0001AC  1019               	iorwf	??_main^0,w,c
   277  0001AE  6E03               	movwf	(_can_rxbuff+2)^0,c
   278  0001B0  5004               	movf	(_can_rxbuff+3)^0,w,c
   279  0001B2  6E04               	movwf	(_can_rxbuff+3)^0,c
   280  0001B4                     
   281                           ;newmain.c: 159:         if(canMessageFlag)
   282  0001B4  5018               	movf	_canMessageFlag^0,w,c
   283  0001B6  B4D8               	btfsc	status,2,c
   284  0001B8  EFE0  F000         	goto	u41
   285  0001BC  EFE2  F000         	goto	u40
   286  0001C0                     u41:
   287  0001C0  EFF8  F000         	goto	l844
   288  0001C4                     u40:
   289  0001C4                     
   290                           ;newmain.c: 160:         {;newmain.c: 161:             if( ( ledHighTimer + ledLowTimer 
      +                          ) == 0 )
   291  0001C4  5012               	movf	_ledLowTimer^0,w,c
   292  0001C6  2414               	addwf	_ledHighTimer^0,w,c
   293  0001C8  6E19               	movwf	??_main^0,c
   294  0001CA  5013               	movf	(_ledLowTimer+1)^0,w,c
   295  0001CC  2015               	addwfc	(_ledHighTimer+1)^0,w,c
   296  0001CE  6E1A               	movwf	(??_main+1)^0,c
   297  0001D0  5019               	movf	??_main^0,w,c
   298  0001D2  101A               	iorwf	(??_main+1)^0,w,c
   299  0001D4  A4D8               	btfss	status,2,c
   300  0001D6  EFEF  F000         	goto	u51
   301  0001DA  EFF1  F000         	goto	u50
   302  0001DE                     u51:
   303  0001DE  EFF6  F000         	goto	l120
   304  0001E2                     u50:
   305  0001E2                     
   306                           ;newmain.c: 162:             {;newmain.c: 163:                 LATBbits.LATB4 = 0;
   307  0001E2  988A               	bcf	138,4,c	;volatile
   308  0001E4                     
   309                           ;newmain.c: 164:                 ledHighTimer = 500;
   310  0001E4  0E01               	movlw	1
   311  0001E6  6E15               	movwf	(_ledHighTimer+1)^0,c
   312  0001E8  0EF4               	movlw	244
   313  0001EA  6E14               	movwf	_ledHighTimer^0,c
   314  0001EC                     l120:
   315                           
   316                           ;newmain.c: 166:             canMessageFlag = 0;
   317  0001EC  0E00               	movlw	0
   318  0001EE  6E18               	movwf	_canMessageFlag^0,c
   319  0001F0                     l844:
   320                           
   321                           ;newmain.c: 172:          if( can_rxbuff.fullid == 0x12f )
   322  0001F0  0E2F               	movlw	47
   323  0001F2  1803               	xorwf	(_can_rxbuff+2)^0,w,c
   324  0001F4  E106               	bnz	u61
   325  0001F6  0404               	decf	(_can_rxbuff+3)^0,w,c
   326  0001F8  A4D8               	btfss	status,2,c
   327  0001FA  EF01  F001         	goto	u61
   328  0001FE  EF03  F001         	goto	u60
   329  000202                     u61:
   330  000202  EF12  F001         	goto	l852
   331  000206                     u60:
   332  000206                     
   333                           ;newmain.c: 173:         {;newmain.c: 174:             if( ( can_rxbuff.d3 &0xf0 ) == 0x
      +                          d0 )
   334  000206  5009               	movf	(_can_rxbuff+8)^0,w,c
   335  000208  0BF0               	andlw	240
   336  00020A  0AD0               	xorlw	208
   337  00020C  A4D8               	btfss	status,2,c
   338  00020E  EF0B  F001         	goto	u71
   339  000212  EF0D  F001         	goto	u70
   340  000216                     u71:
   341  000216  EF12  F001         	goto	l852
   342  00021A                     u70:
   343  00021A                     
   344                           ;newmain.c: 175:             {;newmain.c: 176:                 LATBbits.LATB5 = 0;
   345  00021A  9A8A               	bcf	138,5,c	;volatile
   346  00021C                     
   347                           ;newmain.c: 177:                 ignTimer = 1000;
   348  00021C  0E03               	movlw	3
   349  00021E  6E11               	movwf	(_ignTimer+1)^0,c
   350  000220  0EE8               	movlw	232
   351  000222  6E10               	movwf	_ignTimer^0,c
   352  000224                     l852:
   353                           
   354                           ;newmain.c: 180:         if( can_rxbuff.fullid == 0x12f )
   355  000224  0E2F               	movlw	47
   356  000226  1803               	xorwf	(_can_rxbuff+2)^0,w,c
   357  000228  E106               	bnz	u81
   358  00022A  0404               	decf	(_can_rxbuff+3)^0,w,c
   359  00022C  A4D8               	btfss	status,2,c
   360  00022E  EF1B  F001         	goto	u81
   361  000232  EF1D  F001         	goto	u80
   362  000236                     u81:
   363  000236  EFBC  F000         	goto	l832
   364  00023A                     u80:
   365  00023A                     
   366                           ;newmain.c: 181:         {;newmain.c: 182:             if( ( can_rxbuff.d6 & 0x0f ) == 0
      +                          x03 )
   367  00023A  500C               	movf	(_can_rxbuff+11)^0,w,c
   368  00023C  0B0F               	andlw	15
   369  00023E  0A03               	xorlw	3
   370  000240  A4D8               	btfss	status,2,c
   371  000242  EF25  F001         	goto	u91
   372  000246  EF27  F001         	goto	u90
   373  00024A                     u91:
   374  00024A  EFBC  F000         	goto	l832
   375  00024E                     u90:
   376  00024E                     
   377                           ;newmain.c: 183:             {;newmain.c: 184:                 LATBbits.LATB6 = 0;
   378  00024E  9C8A               	bcf	138,6,c	;volatile
   379  000250                     
   380                           ;newmain.c: 185:                 brakeTimer = 1000;
   381  000250  0E03               	movlw	3
   382  000252  6E0F               	movwf	(_brakeTimer+1)^0,c
   383  000254  0EE8               	movlw	232
   384  000256  6E0E               	movwf	_brakeTimer^0,c
   385  000258  EFBC  F000         	goto	l832
   386  00025C  EFA7  F000         	goto	start
   387  000260                     __end_of_main:
   388                           	callstack 0
   389                           
   390 ;; *************** function _can_init *****************
   391 ;; Defined at:
   392 ;;		line 97 in file "newmain.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2, status,0
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels used: 1
   412 ;; Hardware stack levels required when called: 1
   413 ;; This function calls:
   414 ;;		Nothing
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text1
   421  000260                     __ptext1:
   422                           	callstack 0
   423  000260                     _can_init:
   424                           	callstack 29
   425  000260                     
   426                           ;newmain.c: 100:     TRISBbits.TRISB2 = 0;
   427  000260  9493               	bcf	147,2,c	;volatile
   428                           
   429                           ;newmain.c: 101:     TRISBbits.TRISB3 = 1;
   430  000262  8693               	bsf	147,3,c	;volatile
   431  000264                     
   432                           ;newmain.c: 103:     CANCONbits.REQOP = 0b100;
   433  000264  506F               	movf	111,w,c	;volatile
   434  000266  0B1F               	andlw	-225
   435  000268  0980               	iorlw	128
   436  00026A  6E6F               	movwf	111,c	;volatile
   437  00026C                     l822:
   438  00026C  506E               	movf	110,w,c	;volatile
   439  00026E  0BE0               	andlw	224
   440  000270  0A80               	xorlw	128
   441  000272  A4D8               	btfss	status,2,c
   442  000274  EF3E  F001         	goto	u11
   443  000278  EF40  F001         	goto	u10
   444  00027C                     u11:
   445  00027C  EF36  F001         	goto	l822
   446  000280                     u10:
   447  000280                     
   448                           ;newmain.c: 105:     ECANCON = 0x00;
   449  000280  0E00               	movlw	0
   450  000282  6E72               	movwf	114,c	;volatile
   451                           
   452                           ;newmain.c: 106:     RXM0EIDH = 0x00;
   453  000284  0E00               	movlw	0
   454  000286  010E               	movlb	14	; () banked
   455  000288  6FFA               	movwf	250,b	;volatile
   456                           
   457                           ;newmain.c: 107:     RXM0EIDL = 0x00;
   458  00028A  0E00               	movlw	0
   459  00028C  6FFB               	movwf	251,b	;volatile
   460                           
   461                           ;newmain.c: 108:     RXM0SIDH = 0x00;
   462  00028E  0E00               	movlw	0
   463  000290  6FF8               	movwf	248,b	;volatile
   464                           
   465                           ;newmain.c: 109:     RXM0SIDL = 0x00;
   466  000292  0E00               	movlw	0
   467  000294  6FF9               	movwf	249,b	;volatile
   468                           
   469                           ;newmain.c: 110:     RXM1EIDH = 0x00;
   470  000296  0E00               	movlw	0
   471  000298  6FFE               	movwf	254,b	;volatile
   472                           
   473                           ;newmain.c: 111:     RXM1EIDL = 0x00;
   474  00029A  0E00               	movlw	0
   475  00029C  6FFF               	movwf	255,b	;volatile
   476                           
   477                           ;newmain.c: 112:     RXM1SIDH = 0x00;
   478  00029E  0E00               	movlw	0
   479  0002A0  6FFC               	movwf	252,b	;volatile
   480                           
   481                           ;newmain.c: 113:     RXM1SIDL = 0x00;
   482  0002A2  0E00               	movlw	0
   483  0002A4  6FFD               	movwf	253,b	;volatile
   484                           
   485                           ;newmain.c: 114:     RXF0EIDH = 0x00;
   486  0002A6  0E00               	movlw	0
   487  0002A8  6FE2               	movwf	226,b	;volatile
   488                           
   489                           ;newmain.c: 115:     RXF0EIDL = 0x00;
   490  0002AA  0E00               	movlw	0
   491  0002AC  6FE3               	movwf	227,b	;volatile
   492                           
   493                           ;newmain.c: 116:     RXF0SIDH = 0x00;
   494  0002AE  0E00               	movlw	0
   495  0002B0  6FE0               	movwf	224,b	;volatile
   496                           
   497                           ;newmain.c: 117:     RXF0SIDL = 0x00;
   498  0002B2  0E00               	movlw	0
   499  0002B4  6FE1               	movwf	225,b	;volatile
   500                           
   501                           ;newmain.c: 118:     RXF1EIDH = 0x00;
   502  0002B6  0E00               	movlw	0
   503  0002B8  6FE6               	movwf	230,b	;volatile
   504                           
   505                           ;newmain.c: 119:     RXF1EIDL = 0x00;
   506  0002BA  0E00               	movlw	0
   507  0002BC  6FE7               	movwf	231,b	;volatile
   508                           
   509                           ;newmain.c: 120:     RXF1SIDH = 0x00;
   510  0002BE  0E00               	movlw	0
   511  0002C0  6FE4               	movwf	228,b	;volatile
   512                           
   513                           ;newmain.c: 121:     RXF1SIDL = 0x00;
   514  0002C2  0E00               	movlw	0
   515  0002C4  6FE5               	movwf	229,b	;volatile
   516                           
   517                           ;newmain.c: 124:     BRGCON1 = 0x01;
   518  0002C6  0E01               	movlw	1
   519  0002C8  6F43               	movwf	67,b	;volatile
   520                           
   521                           ;newmain.c: 125:     BRGCON2 = 0x98;
   522  0002CA  0E98               	movlw	152
   523  0002CC  6F44               	movwf	68,b	;volatile
   524                           
   525                           ;newmain.c: 126:     BRGCON3 = 0x01;
   526  0002CE  0E01               	movlw	1
   527  0002D0  6F45               	movwf	69,b	;volatile
   528                           
   529                           ;newmain.c: 128:     ECANCONbits.MDSEL = 0b00;
   530  0002D2  0E3F               	movlw	-193
   531  0002D4  1672               	andwf	114,f,c	;volatile
   532                           
   533                           ;newmain.c: 129:     CANCONbits.REQOP = 0b011;
   534  0002D6  506F               	movf	111,w,c	;volatile
   535  0002D8  0B1F               	andlw	-225
   536  0002DA  0960               	iorlw	96
   537  0002DC  6E6F               	movwf	111,c	;volatile
   538  0002DE                     l826:
   539  0002DE  386E               	swapf	110,w,c	;volatile
   540  0002E0  32E8               	rrcf	wreg,f,c
   541  0002E2  0B07               	andlw	7
   542  0002E4  0A03               	xorlw	3
   543  0002E6  A4D8               	btfss	status,2,c
   544  0002E8  EF78  F001         	goto	u21
   545  0002EC  EF7A  F001         	goto	u20
   546  0002F0                     u21:
   547  0002F0  EF6F  F001         	goto	l826
   548  0002F4                     u20:
   549  0002F4  0012               	return		;funcret
   550  0002F6                     __end_of_can_init:
   551                           	callstack 0
   552                           
   553 ;; *************** function _myISR *****************
   554 ;; Defined at:
   555 ;;		line 235 in file "newmain.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, status,2, status,0
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   573 ;;Total ram usage:        0 bytes
   574 ;; Hardware stack levels used: 1
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		Interrupt level 2
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	intcode
   583  000008                     __pintcode:
   584                           	callstack 0
   585  000008                     _myISR:
   586                           	callstack 29
   587                           
   588                           ;incstack = 0
   589  000008  821B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   590  00000A                     
   591                           ;newmain.c: 238:  if (PIR5bits.RXB0IF && PIE5bits.RXB0IE)
   592  00000A  A077               	btfss	119,0,c	;volatile
   593  00000C  EF0A  F000         	goto	i2u10_41
   594  000010  EF0C  F000         	goto	i2u10_40
   595  000014                     i2u10_41:
   596  000014  EF2E  F000         	goto	i2l872
   597  000018                     i2u10_40:
   598  000018  A076               	btfss	118,0,c	;volatile
   599  00001A  EF11  F000         	goto	i2u11_41
   600  00001E  EF13  F000         	goto	i2u11_40
   601  000022                     i2u11_41:
   602  000022  EF2E  F000         	goto	i2l872
   603  000026                     i2u11_40:
   604  000026                     
   605                           ;newmain.c: 239:   {;newmain.c: 240:   PIR5bits.RXB0IF = 0;
   606  000026  9077               	bcf	119,0,c	;volatile
   607                           
   608                           ;newmain.c: 242:   can_rxbuff.d0 = RXB0D0;
   609  000028  CF66 F006          	movff	3942,_can_rxbuff+5	;volatile
   610                           
   611                           ;newmain.c: 243:   can_rxbuff.d1 = RXB0D1;
   612  00002C  CF67 F007          	movff	3943,_can_rxbuff+6	;volatile
   613                           
   614                           ;newmain.c: 244:   can_rxbuff.d2 = RXB0D2;
   615  000030  CF68 F008          	movff	3944,_can_rxbuff+7	;volatile
   616                           
   617                           ;newmain.c: 245:   can_rxbuff.d3 = RXB0D3;
   618  000034  CF69 F009          	movff	3945,_can_rxbuff+8	;volatile
   619                           
   620                           ;newmain.c: 246:         can_rxbuff.d4 = RXB0D4;
   621  000038  CF6A F00A          	movff	3946,_can_rxbuff+9	;volatile
   622                           
   623                           ;newmain.c: 247:         can_rxbuff.d5 = RXB0D5;
   624  00003C  CF6B F00B          	movff	3947,_can_rxbuff+10	;volatile
   625                           
   626                           ;newmain.c: 248:         can_rxbuff.d6 = RXB0D6;
   627  000040  CF6C F00C          	movff	3948,_can_rxbuff+11	;volatile
   628                           
   629                           ;newmain.c: 249:         can_rxbuff.d7 = RXB0D7;
   630  000044  CF6D F00D          	movff	3949,_can_rxbuff+12	;volatile
   631                           
   632                           ;newmain.c: 250:   can_rxbuff.dl = RXB0DLC;
   633  000048  CF65 F005          	movff	3941,_can_rxbuff+4	;volatile
   634                           
   635                           ;newmain.c: 251:         can_rxbuff.idh = RXB0SIDH;
   636  00004C  CF61 F001          	movff	3937,_can_rxbuff	;volatile
   637  000050                     
   638                           ;newmain.c: 252:         can_rxbuff.idl = (RXB0SIDL&0xe0);
   639  000050  5062               	movf	98,w,c	;volatile
   640  000052  0BE0               	andlw	224
   641  000054  6E02               	movwf	(_can_rxbuff+1)^0,c
   642  000056                     
   643                           ;newmain.c: 253:         canMessageFlag = 1;
   644  000056  0E01               	movlw	1
   645  000058  6E18               	movwf	_canMessageFlag^0,c
   646  00005A                     
   647                           ;newmain.c: 255:         RXB0CONbits.RXFUL = 0;
   648  00005A  9E60               	bcf	96,7,c	;volatile
   649  00005C                     i2l872:
   650                           
   651                           ;newmain.c: 257:     if(INTCONbits.T0IE && INTCONbits.TMR0IF)
   652  00005C  AAF2               	btfss	242,5,c	;volatile
   653  00005E  EF33  F000         	goto	i2u12_41
   654  000062  EF35  F000         	goto	i2u12_40
   655  000066                     i2u12_41:
   656  000066  EFA5  F000         	goto	i2l142
   657  00006A                     i2u12_40:
   658  00006A  A4F2               	btfss	242,2,c	;volatile
   659  00006C  EF3A  F000         	goto	i2u13_41
   660  000070  EF3C  F000         	goto	i2u13_40
   661  000074                     i2u13_41:
   662  000074  EFA5  F000         	goto	i2l142
   663  000078                     i2u13_40:
   664  000078                     
   665                           ;newmain.c: 258:     {;newmain.c: 259:         ledtimer++;
   666  000078  4A16               	infsnz	_ledtimer^0,f,c
   667  00007A  2A17               	incf	(_ledtimer+1)^0,f,c
   668  00007C                     
   669                           ;newmain.c: 260:         if(ledtimer > 500)
   670  00007C  0EF5               	movlw	245
   671  00007E  5C16               	subwf	_ledtimer^0,w,c
   672  000080  0E01               	movlw	1
   673  000082  5817               	subwfb	(_ledtimer+1)^0,w,c
   674  000084  A0D8               	btfss	status,0,c
   675  000086  EF47  F000         	goto	i2u14_41
   676  00008A  EF49  F000         	goto	i2u14_40
   677  00008E                     i2u14_41:
   678  00008E  EF4E  F000         	goto	i2l884
   679  000092                     i2u14_40:
   680  000092                     
   681                           ;newmain.c: 261:         {;newmain.c: 262:             LATBbits.LATB7 ^= 1;
   682  000092  7E8A               	btg	138,7,c	;volatile
   683  000094                     
   684                           ;newmain.c: 265:             ledtimer = 0;
   685  000094  0E00               	movlw	0
   686  000096  6E17               	movwf	(_ledtimer+1)^0,c
   687  000098  0E00               	movlw	0
   688  00009A  6E16               	movwf	_ledtimer^0,c
   689  00009C                     i2l884:
   690                           
   691                           ;newmain.c: 267:         if(ledHighTimer > 0)
   692  00009C  5014               	movf	_ledHighTimer^0,w,c
   693  00009E  1015               	iorwf	(_ledHighTimer+1)^0,w,c
   694  0000A0  B4D8               	btfsc	status,2,c
   695  0000A2  EF55  F000         	goto	i2u15_41
   696  0000A6  EF57  F000         	goto	i2u15_40
   697  0000AA                     i2u15_41:
   698  0000AA  EF68  F000         	goto	i2l894
   699  0000AE                     i2u15_40:
   700  0000AE                     
   701                           ;newmain.c: 268:         {;newmain.c: 269:             ledHighTimer--;
   702  0000AE  0614               	decf	_ledHighTimer^0,f,c
   703  0000B0  A0D8               	btfss	status,0,c
   704  0000B2  0615               	decf	(_ledHighTimer+1)^0,f,c
   705  0000B4                     
   706                           ;newmain.c: 270:             if(ledHighTimer == 0)
   707  0000B4  5014               	movf	_ledHighTimer^0,w,c
   708  0000B6  1015               	iorwf	(_ledHighTimer+1)^0,w,c
   709  0000B8  A4D8               	btfss	status,2,c
   710  0000BA  EF61  F000         	goto	i2u16_41
   711  0000BE  EF63  F000         	goto	i2u16_40
   712  0000C2                     i2u16_41:
   713  0000C2  EF68  F000         	goto	i2l894
   714  0000C6                     i2u16_40:
   715  0000C6                     
   716                           ;newmain.c: 271:             {;newmain.c: 272:                 ledLowTimer = 500;
   717  0000C6  0E01               	movlw	1
   718  0000C8  6E13               	movwf	(_ledLowTimer+1)^0,c
   719  0000CA  0EF4               	movlw	244
   720  0000CC  6E12               	movwf	_ledLowTimer^0,c
   721  0000CE                     
   722                           ;newmain.c: 273:                 LATBbits.LATB4 = 1;
   723  0000CE  888A               	bsf	138,4,c	;volatile
   724  0000D0                     i2l894:
   725                           
   726                           ;newmain.c: 276:         if(ledLowTimer > 0)
   727  0000D0  5012               	movf	_ledLowTimer^0,w,c
   728  0000D2  1013               	iorwf	(_ledLowTimer+1)^0,w,c
   729  0000D4  B4D8               	btfsc	status,2,c
   730  0000D6  EF6F  F000         	goto	i2u17_41
   731  0000DA  EF71  F000         	goto	i2u17_40
   732  0000DE                     i2u17_41:
   733  0000DE  EF74  F000         	goto	i2l898
   734  0000E2                     i2u17_40:
   735  0000E2                     
   736                           ;newmain.c: 277:         {;newmain.c: 278:             ledLowTimer--;
   737  0000E2  0612               	decf	_ledLowTimer^0,f,c
   738  0000E4  A0D8               	btfss	status,0,c
   739  0000E6  0613               	decf	(_ledLowTimer+1)^0,f,c
   740  0000E8                     i2l898:
   741                           
   742                           ;newmain.c: 282:         if(brakeTimer > 0)
   743  0000E8  500E               	movf	_brakeTimer^0,w,c
   744  0000EA  100F               	iorwf	(_brakeTimer+1)^0,w,c
   745  0000EC  B4D8               	btfsc	status,2,c
   746  0000EE  EF7B  F000         	goto	i2u18_41
   747  0000F2  EF7D  F000         	goto	i2u18_40
   748  0000F6                     i2u18_41:
   749  0000F6  EF8A  F000         	goto	i2l906
   750  0000FA                     i2u18_40:
   751  0000FA                     
   752                           ;newmain.c: 283:         {;newmain.c: 284:             brakeTimer--;
   753  0000FA  060E               	decf	_brakeTimer^0,f,c
   754  0000FC  A0D8               	btfss	status,0,c
   755  0000FE  060F               	decf	(_brakeTimer+1)^0,f,c
   756  000100                     
   757                           ;newmain.c: 285:             if(brakeTimer == 0)
   758  000100  500E               	movf	_brakeTimer^0,w,c
   759  000102  100F               	iorwf	(_brakeTimer+1)^0,w,c
   760  000104  A4D8               	btfss	status,2,c
   761  000106  EF87  F000         	goto	i2u19_41
   762  00010A  EF89  F000         	goto	i2u19_40
   763  00010E                     i2u19_41:
   764  00010E  EF8A  F000         	goto	i2l906
   765  000112                     i2u19_40:
   766  000112                     
   767                           ;newmain.c: 286:             {;newmain.c: 287:                 LATBbits.LATB6 = 1;
   768  000112  8C8A               	bsf	138,6,c	;volatile
   769  000114                     i2l906:
   770                           
   771                           ;newmain.c: 290:         if(ignTimer > 0)
   772  000114  5010               	movf	_ignTimer^0,w,c
   773  000116  1011               	iorwf	(_ignTimer+1)^0,w,c
   774  000118  B4D8               	btfsc	status,2,c
   775  00011A  EF91  F000         	goto	i2u20_41
   776  00011E  EF93  F000         	goto	i2u20_40
   777  000122                     i2u20_41:
   778  000122  EFA0  F000         	goto	i2l914
   779  000126                     i2u20_40:
   780  000126                     
   781                           ;newmain.c: 291:         {;newmain.c: 292:             ignTimer--;
   782  000126  0610               	decf	_ignTimer^0,f,c
   783  000128  A0D8               	btfss	status,0,c
   784  00012A  0611               	decf	(_ignTimer+1)^0,f,c
   785  00012C                     
   786                           ;newmain.c: 293:             if(ignTimer == 0)
   787  00012C  5010               	movf	_ignTimer^0,w,c
   788  00012E  1011               	iorwf	(_ignTimer+1)^0,w,c
   789  000130  A4D8               	btfss	status,2,c
   790  000132  EF9D  F000         	goto	i2u21_41
   791  000136  EF9F  F000         	goto	i2u21_40
   792  00013A                     i2u21_41:
   793  00013A  EFA0  F000         	goto	i2l914
   794  00013E                     i2u21_40:
   795  00013E                     
   796                           ;newmain.c: 294:             {;newmain.c: 295:                 LATBbits.LATB5 = 1;
   797  00013E  8A8A               	bsf	138,5,c	;volatile
   798  000140                     i2l914:
   799                           
   800                           ;newmain.c: 298:         TMR0H = 0xf8;
   801  000140  0EF8               	movlw	248
   802  000142  6ED7               	movwf	215,c	;volatile
   803                           
   804                           ;newmain.c: 299:         TMR0L = 0x2F;
   805  000144  0E2F               	movlw	47
   806  000146  6ED6               	movwf	214,c	;volatile
   807  000148                     
   808                           ;newmain.c: 300:         INTCONbits.TMR0IF = 0;
   809  000148  94F2               	bcf	242,2,c	;volatile
   810  00014A                     i2l142:
   811  00014A  921B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   812  00014C  0011               	retfie		f
   813  00014E                     __end_of_myISR:
   814                           	callstack 0
   815  0000                     
   816                           	psect	rparam
   817  0000                     
   818                           	psect	temp
   819  00001B                     btemp:
   820                           	callstack 0
   821  00001B                     	ds	1
   822  0000                     int$flags	set	btemp
   823  0000                     wtemp8	set	btemp+1
   824  0000                     ttemp5	set	btemp+1
   825  0000                     ttemp6	set	btemp+4
   826  0000                     ttemp7	set	btemp+8
   827                           
   828                           	psect	idloc
   829                           
   830                           ;Config register IDLOC0 @ 0x200000
   831                           ;	unspecified, using default values
   832  200000                     	org	2097152
   833  200000  FF                 	db	255
   834                           
   835                           ;Config register IDLOC1 @ 0x200001
   836                           ;	unspecified, using default values
   837  200001                     	org	2097153
   838  200001  FF                 	db	255
   839                           
   840                           ;Config register IDLOC2 @ 0x200002
   841                           ;	unspecified, using default values
   842  200002                     	org	2097154
   843  200002  FF                 	db	255
   844                           
   845                           ;Config register IDLOC3 @ 0x200003
   846                           ;	unspecified, using default values
   847  200003                     	org	2097155
   848  200003  FF                 	db	255
   849                           
   850                           ;Config register IDLOC4 @ 0x200004
   851                           ;	unspecified, using default values
   852  200004                     	org	2097156
   853  200004  FF                 	db	255
   854                           
   855                           ;Config register IDLOC5 @ 0x200005
   856                           ;	unspecified, using default values
   857  200005                     	org	2097157
   858  200005  FF                 	db	255
   859                           
   860                           ;Config register IDLOC6 @ 0x200006
   861                           ;	unspecified, using default values
   862  200006                     	org	2097158
   863  200006  FF                 	db	255
   864                           
   865                           ;Config register IDLOC7 @ 0x200007
   866                           ;	unspecified, using default values
   867  200007                     	org	2097159
   868  200007  FF                 	db	255
   869                           
   870                           	psect	config
   871                           
   872                           ;Config register CONFIG1L @ 0x300000
   873                           ;	VREG Sleep Enable bit
   874                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
   875                           ;	LF-INTOSC Low-power Enable bit
   876                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
   877                           ;	SOSC Power Selection and mode Configuration bits
   878                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
   879                           ;	Extended Instruction Set
   880                           ;	XINST = OFF, Disabled
   881  300000                     	org	3145728
   882  300000  15                 	db	21
   883                           
   884                           ;Config register CONFIG1H @ 0x300001
   885                           ;	Oscillator
   886                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
   887                           ;	PLL x4 Enable bit
   888                           ;	PLLCFG = ON, Enabled
   889                           ;	Fail-Safe Clock Monitor
   890                           ;	FCMEN = ON, Enabled
   891                           ;	Internal External Oscillator Switch Over Mode
   892                           ;	IESO = ON, Enabled
   893  300001                     	org	3145729
   894  300001  D3                 	db	211
   895                           
   896                           ;Config register CONFIG2L @ 0x300002
   897                           ;	Power Up Timer
   898                           ;	PWRTEN = ON, Enabled
   899                           ;	Brown Out Detect
   900                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
   901                           ;	Brown-out Reset Voltage bits
   902                           ;	BORV = 3, 1.8V
   903                           ;	BORMV Power level
   904                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
   905  300002                     	org	3145730
   906  300002  7E                 	db	126
   907                           
   908                           ;Config register CONFIG2H @ 0x300003
   909                           ;	Watchdog Timer
   910                           ;	WDTEN = SWDTDIS, WDT enabled in hardware; SWDTEN bit disabled
   911                           ;	Watchdog Postscaler
   912                           ;	WDTPS = 1048576, 1:1048576
   913  300003                     	org	3145731
   914  300003  7F                 	db	127
   915                           
   916                           ; Padding undefined space
   917  300004                     	org	3145732
   918  300004  FF                 	db	255
   919                           
   920                           ;Config register CONFIG3H @ 0x300005
   921                           ;	ECAN Mux bit
   922                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
   923                           ;	MSSP address masking
   924                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
   925                           ;	Master Clear Enable
   926                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
   927  300005                     	org	3145733
   928  300005  89                 	db	137
   929                           
   930                           ;Config register CONFIG4L @ 0x300006
   931                           ;	Stack Overflow Reset
   932                           ;	STVREN = ON, Enabled
   933                           ;	Boot Block Size
   934                           ;	BBSIZ = BB2K, 2K word Boot Block size
   935  300006                     	org	3145734
   936  300006  91                 	db	145
   937                           
   938                           ; Padding undefined space
   939  300007                     	org	3145735
   940  300007  FF                 	db	255
   941                           
   942                           ;Config register CONFIG5L @ 0x300008
   943                           ;	Code Protect 00800-01FFF
   944                           ;	CP0 = OFF, Disabled
   945                           ;	Code Protect 02000-03FFF
   946                           ;	CP1 = OFF, Disabled
   947                           ;	Code Protect 04000-05FFF
   948                           ;	CP2 = OFF, Disabled
   949                           ;	Code Protect 06000-07FFF
   950                           ;	CP3 = OFF, Disabled
   951  300008                     	org	3145736
   952  300008  0F                 	db	15
   953                           
   954                           ;Config register CONFIG5H @ 0x300009
   955                           ;	Code Protect Boot
   956                           ;	CPB = OFF, Disabled
   957                           ;	Data EE Read Protect
   958                           ;	CPD = OFF, Disabled
   959  300009                     	org	3145737
   960  300009  C0                 	db	192
   961                           
   962                           ;Config register CONFIG6L @ 0x30000A
   963                           ;	Table Write Protect 00800-01FFF
   964                           ;	WRT0 = OFF, Disabled
   965                           ;	Table Write Protect 02000-03FFF
   966                           ;	WRT1 = OFF, Disabled
   967                           ;	Table Write Protect 04000-05FFF
   968                           ;	WRT2 = OFF, Disabled
   969                           ;	Table Write Protect 06000-07FFF
   970                           ;	WRT3 = OFF, Disabled
   971  30000A                     	org	3145738
   972  30000A  0F                 	db	15
   973                           
   974                           ;Config register CONFIG6H @ 0x30000B
   975                           ;	Config. Write Protect
   976                           ;	WRTC = OFF, Disabled
   977                           ;	Table Write Protect Boot
   978                           ;	WRTB = OFF, Disabled
   979                           ;	Data EE Write Protect
   980                           ;	WRTD = OFF, Disabled
   981  30000B                     	org	3145739
   982  30000B  E0                 	db	224
   983                           
   984                           ;Config register CONFIG7L @ 0x30000C
   985                           ;	Table Read Protect 00800-01FFF
   986                           ;	EBTR0 = OFF, Disabled
   987                           ;	Table Read Protect 02000-03FFF
   988                           ;	EBTR1 = OFF, Disabled
   989                           ;	Table Read Protect 04000-05FFF
   990                           ;	EBTR2 = OFF, Disabled
   991                           ;	Table Read Protect 06000-07FFF
   992                           ;	EBTR3 = OFF, Disabled
   993  30000C                     	org	3145740
   994  30000C  0F                 	db	15
   995                           
   996                           ;Config register CONFIG7H @ 0x30000D
   997                           ;	Table Read Protect Boot
   998                           ;	EBTRB = OFF, Disabled
   999  30000D                     	org	3145741
  1000  30000D  40                 	db	64
  1001                           tosu	equ	0xFFF
  1002                           tosh	equ	0xFFE
  1003                           tosl	equ	0xFFD
  1004                           stkptr	equ	0xFFC
  1005                           pclatu	equ	0xFFB
  1006                           pclath	equ	0xFFA
  1007                           pcl	equ	0xFF9
  1008                           tblptru	equ	0xFF8
  1009                           tblptrh	equ	0xFF7
  1010                           tblptrl	equ	0xFF6
  1011                           tablat	equ	0xFF5
  1012                           prodh	equ	0xFF4
  1013                           prodl	equ	0xFF3
  1014                           indf0	equ	0xFEF
  1015                           postinc0	equ	0xFEE
  1016                           postdec0	equ	0xFED
  1017                           preinc0	equ	0xFEC
  1018                           plusw0	equ	0xFEB
  1019                           fsr0h	equ	0xFEA
  1020                           fsr0l	equ	0xFE9
  1021                           wreg	equ	0xFE8
  1022                           indf1	equ	0xFE7
  1023                           postinc1	equ	0xFE6
  1024                           postdec1	equ	0xFE5
  1025                           preinc1	equ	0xFE4
  1026                           plusw1	equ	0xFE3
  1027                           fsr1h	equ	0xFE2
  1028                           fsr1l	equ	0xFE1
  1029                           bsr	equ	0xFE0
  1030                           indf2	equ	0xFDF
  1031                           postinc2	equ	0xFDE
  1032                           postdec2	equ	0xFDD
  1033                           preinc2	equ	0xFDC
  1034                           plusw2	equ	0xFDB
  1035                           fsr2h	equ	0xFDA
  1036                           fsr2l	equ	0xFD9
  1037                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                           _can_init
 ---------------------------------------------------------------------------------
 (1) _can_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myISR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_init

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2      1A       1       27.7%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A       6        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jul 02 15:55:35 2023

                     u10 0280                       u11 027C                       u20 02F4  
                     u21 02F0                       u40 01C4                       u41 01C0  
                     u50 01E2                       u51 01DE                       u35 01A0  
                     u60 0206                       u61 0202                       u70 021A  
                     u71 0216                       u80 023A                       u81 0236  
                     u90 024E                       u91 024A                      l120 01EC  
                    l113 02F4                      l820 0264                      l822 026C  
                    l830 0174                      l824 0280                      l840 01E2  
                    l832 0178                      l826 02DE                      l818 0260  
                    l850 021C                      l842 01E4                      l834 0198  
                    l852 0224                      l844 01F0                      l836 01B4  
                    l828 0152                      l854 023A                      l846 0206  
                    l838 01C4                      l856 024E                      l848 021A  
                    l858 0250                      wreg 000FE8                     _main 0152  
                   btemp 001B                     start 014E             ___param_bank 000000  
                  ?_main 0019                    i2l142 014A                    i2l900 00FA  
                  i2l910 012C                    i2l902 0100                    i2l912 013E  
                  i2l904 0112                    i2l914 0140                    i2l906 0114  
                  i2l916 0148                    i2l908 0126                    i2l860 000A  
                  i2l870 005A                    i2l862 0018                    i2l880 0092  
                  i2l864 0026                    i2l872 005C                    i2l890 00C6  
                  i2l882 0094                    i2l874 006A                    i2l866 0050  
                  i2l892 00CE                    i2l884 009C                    i2l876 0078  
                  i2l868 0056                    i2l886 00AE                    i2l894 00D0  
                  i2l878 007C                    i2l896 00E2                    i2l888 00B4  
                  i2l898 00E8                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _myISR 0008                    ttemp5 001C                    ttemp6 001F  
                  ttemp7 0023                    status 000FD8                    wtemp8 001C  
        __initialization 02F6             __end_of_main 0260                   ??_main 0019  
          __activetblptr 000000                   ?_myISR 0019                   _RXB0D0 000F66  
                 _RXB0D1 000F67                   _RXB0D2 000F68                   _RXB0D3 000F69  
                 _RXB0D4 000F6A                   _RXB0D5 000F6B                   _RXB0D6 000F6C  
                 _RXB0D7 000F6D         __end_of_can_init 02F6                   clear_0 02FC  
                 isa$std 000001               __accesstop 0060  __end_of__initialization 0302  
          ___rparam_used 000001           __pcstackCOMRAM 0019            __end_of_myISR 014E  
                ??_myISR 0019               _can_rxbuff 0001               _brakeTimer 000E  
                _ECANCON 000F72                  _CANSTAT 000F6E                  _BRGCON1 000E43  
                _BRGCON2 000E44                  _BRGCON3 000E45                ?_can_init 0019  
                i2u10_40 0018                  i2u10_41 0014                  i2u11_40 0026  
                i2u11_41 0022                  i2u20_40 0126                  i2u12_40 006A  
                i2u20_41 0122                  i2u12_41 0066                  i2u21_40 013E  
                i2u13_40 0078                  i2u21_41 013A                  i2u13_41 0074  
                i2u14_40 0092                  i2u14_41 008E                  i2u15_40 00AE  
                i2u15_41 00AA                  i2u16_40 00C6                  i2u16_41 00C2  
                i2u17_40 00E2                  i2u17_41 00DE                  i2u18_40 00FA  
                i2u18_41 00F6                  _RXB0DLC 000F65                  i2u19_40 0112  
                i2u19_41 010E             _ledHighTimer 0014                  __Hparam 0000  
                __Lparam 0000                  __pcinit 02F6                  __ramtop 0F00  
                __ptext0 0152                  __ptext1 0260                _T0CONbits 000FD5  
             ??_can_init 0019     end_of_initialization 0302                  postinc0 000FEE  
              _TRISBbits 000F93                _TRISCbits 000F94           _canMessageFlag 0018  
            _ECANCONbits 000F72      start_initialization 02F6              _CANSTATbits 000F6E  
            __pbssCOMRAM 0001        __size_of_can_init 0096                __pintcode 0008  
         __size_of_myISR 0146              _ledLowTimer 0012                 _LATBbits 000F8A  
               _PIE5bits 000F76                 _PIR5bits 000F77                 _RXB0SIDH 000F61  
               _RXB0SIDL 000F62                 _RXF0EIDH 000EE2                 _RXF0EIDL 000EE3  
               _RXF1EIDH 000EE6                 _RXF1EIDL 000EE7                 _RXF0SIDH 000EE0  
               _RXF0SIDL 000EE1                 _RXF1SIDH 000EE4                 _RXF1SIDL 000EE5  
               _RXM0EIDH 000EFA                 _RXM0EIDL 000EFB                 _RXM1EIDH 000EFE  
               _RXM1EIDL 000EFF                 _RXM0SIDH 000EF8                 _RXM0SIDL 000EF9  
               _RXM1SIDH 000EFC                 _RXM1SIDL 000EFD               _CANCONbits 000F6F  
               __Hrparam 0000                 __Lrparam 0000                 _can_init 0260  
               _ignTimer 0010                 _ledtimer 0016            __size_of_main 010E  
               isa$xinst 000000                 int$flags 001B              _RXB0CONbits 000F60  
             _INTCONbits 000FF2                 intlevel2 0000  
