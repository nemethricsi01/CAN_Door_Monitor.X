

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jun 25 02:36:07 2023

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F26K80 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _BRGCON3	set	3653
    53  0000                     _BRGCON2	set	3652
    54  0000                     _BRGCON1	set	3651
    55  0000                     _RXF1SIDL	set	3813
    56  0000                     _RXF1SIDH	set	3812
    57  0000                     _RXF1EIDL	set	3815
    58  0000                     _RXF1EIDH	set	3814
    59  0000                     _RXF0SIDL	set	3809
    60  0000                     _RXF0SIDH	set	3808
    61  0000                     _RXF0EIDL	set	3811
    62  0000                     _RXF0EIDH	set	3810
    63  0000                     _RXM1SIDL	set	3837
    64  0000                     _RXM1SIDH	set	3836
    65  0000                     _RXM1EIDL	set	3839
    66  0000                     _RXM1EIDH	set	3838
    67  0000                     _RXM0SIDL	set	3833
    68  0000                     _RXM0SIDH	set	3832
    69  0000                     _RXM0EIDL	set	3835
    70  0000                     _RXM0EIDH	set	3834
    71  0000                     _TMR0L	set	4054
    72  0000                     _TMR0H	set	4055
    73  0000                     _RXB0CONbits	set	3936
    74  0000                     _RXB0SIDL	set	3938
    75  0000                     _RXB0SIDH	set	3937
    76  0000                     _RXB0DLC	set	3941
    77  0000                     _RXB0D7	set	3949
    78  0000                     _RXB0D6	set	3948
    79  0000                     _RXB0D5	set	3947
    80  0000                     _RXB0D4	set	3946
    81  0000                     _RXB0D3	set	3945
    82  0000                     _RXB0D2	set	3944
    83  0000                     _RXB0D1	set	3943
    84  0000                     _RXB0D0	set	3942
    85  0000                     _PIR5bits	set	3959
    86  0000                     _T0CONbits	set	4053
    87  0000                     _LATBbits	set	3978
    88  0000                     _LATCbits	set	3979
    89  0000                     _TRISCbits	set	3988
    90  0000                     _INTCONbits	set	4082
    91  0000                     _PIE5bits	set	3958
    92  0000                     _CANSTATbits	set	3950
    93  0000                     _ECANCONbits	set	3954
    94  0000                     _ECANCON	set	3954
    95  0000                     _CANSTAT	set	3950
    96  0000                     _CANCONbits	set	3951
    97  0000                     _TRISBbits	set	3987
    98                           
    99                           ; #config settings
   100                           
   101                           	psect	cinit
   102  00035A                     __pcinit:
   103                           	callstack 0
   104  00035A                     start_initialization:
   105                           	callstack 0
   106  00035A                     __initialization:
   107                           	callstack 0
   108                           
   109                           ; Clear objects allocated to COMRAM (15 bytes)
   110  00035A  EE00  F001         	lfsr	0,__pbssCOMRAM
   111  00035E  0E0F               	movlw	15
   112  000360                     clear_0:
   113  000360  6AEE               	clrf	postinc0,c
   114  000362  06E8               	decf	wreg,f,c
   115  000364  E1FD               	bnz	clear_0
   116  000366                     end_of_initialization:
   117                           	callstack 0
   118  000366                     __end_of__initialization:
   119                           	callstack 0
   120  000366  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   121  000368  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   122  00036A  0100               	movlb	0
   123  00036C  EF55  F000         	goto	_main	;jump to C main() function
   124                           
   125                           	psect	bssCOMRAM
   126  000001                     __pbssCOMRAM:
   127                           	callstack 0
   128  000001                     _can_rxbuff:
   129                           	callstack 0
   130  000001                     	ds	13
   131  00000E                     _ledtimer:
   132                           	callstack 0
   133  00000E                     	ds	2
   134                           
   135                           	psect	cstackCOMRAM
   136  000010                     __pcstackCOMRAM:
   137                           	callstack 0
   138  000010                     ??_main:
   139  000010                     
   140                           ; 1 bytes @ 0x0
   141  000010                     	ds	2
   142                           
   143 ;;
   144 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   145 ;;
   146 ;; *************** function _main *****************
   147 ;; Defined at:
   148 ;;		line 126 in file "newmain.c"
   149 ;; Parameters:    Size  Location     Type
   150 ;;		None
   151 ;; Auto vars:     Size  Location     Type
   152 ;;		None
   153 ;; Return value:  Size  Location     Type
   154 ;;                  1    wreg      void 
   155 ;; Registers used:
   156 ;;		wreg, status,2, status,0, cstack
   157 ;; Tracked objects:
   158 ;;		On entry : 0/0
   159 ;;		On exit  : 0/0
   160 ;;		Unchanged: 0/0
   161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   164 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   166 ;;Total ram usage:        2 bytes
   167 ;; Hardware stack levels required when called: 2
   168 ;; This function calls:
   169 ;;		_can_init
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176  0000AA                     __ptext0:
   177                           	callstack 0
   178  0000AA                     _main:
   179                           	callstack 29
   180  0000AA                     
   181                           ;newmain.c: 128:     PIE5bits.RXB0IE = 1;
   182  0000AA  8076               	bsf	118,0,c	;volatile
   183                           
   184                           ;newmain.c: 129:     INTCONbits.GIE = 1;
   185  0000AC  8EF2               	bsf	242,7,c	;volatile
   186                           
   187                           ;newmain.c: 130:     INTCONbits.PEIE = 1;
   188  0000AE  8CF2               	bsf	242,6,c	;volatile
   189                           
   190                           ;newmain.c: 131:     TRISCbits.TRISC0 = 0;
   191  0000B0  9094               	bcf	148,0,c	;volatile
   192                           
   193                           ;newmain.c: 132:     TRISCbits.TRISC1 = 0;
   194  0000B2  9294               	bcf	148,1,c	;volatile
   195                           
   196                           ;newmain.c: 133:     TRISBbits.TRISB6 = 0;
   197  0000B4  9C93               	bcf	147,6,c	;volatile
   198                           
   199                           ;newmain.c: 134:     TRISBbits.TRISB7 = 0;
   200  0000B6  9E93               	bcf	147,7,c	;volatile
   201                           
   202                           ;newmain.c: 135:     LATCbits.LATC0 = 1;
   203  0000B8  808B               	bsf	139,0,c	;volatile
   204                           
   205                           ;newmain.c: 136:     LATCbits.LATC1 = 1;
   206  0000BA  828B               	bsf	139,1,c	;volatile
   207                           
   208                           ;newmain.c: 137:     LATBbits.LATB6 = 1;
   209  0000BC  8C8A               	bsf	138,6,c	;volatile
   210                           
   211                           ;newmain.c: 138:     LATBbits.LATB7 = 1;
   212  0000BE  8E8A               	bsf	138,7,c	;volatile
   213                           
   214                           ;newmain.c: 139:     T0CONbits.TMR0ON = 0;
   215  0000C0  9ED5               	bcf	213,7,c	;volatile
   216                           
   217                           ;newmain.c: 140:     T0CONbits.T08BIT = 0;
   218  0000C2  9CD5               	bcf	213,6,c	;volatile
   219                           
   220                           ;newmain.c: 141:     T0CONbits.T0CS = 0;
   221  0000C4  9AD5               	bcf	213,5,c	;volatile
   222                           
   223                           ;newmain.c: 142:     T0CONbits.TMR0ON = 1;
   224  0000C6  8ED5               	bsf	213,7,c	;volatile
   225                           
   226                           ;newmain.c: 143:     INTCONbits.T0IE = 1;
   227  0000C8  8AF2               	bsf	242,5,c	;volatile
   228  0000CA                     
   229                           ;newmain.c: 144:     can_init();
   230  0000CA  EC62  F001         	call	_can_init	;wreg free
   231  0000CE                     l817:
   232                           
   233                           ;newmain.c: 147:     {;newmain.c: 148:         can_rxbuff.fullid = can_rxbuff.idh<<3;
   234  0000CE  5001               	movf	_can_rxbuff^0,w,c
   235  0000D0  6E10               	movwf	??_main^0,c
   236  0000D2  6A11               	clrf	(??_main+1)^0,c
   237  0000D4  90D8               	bcf	status,0,c
   238  0000D6  3610               	rlcf	??_main^0,f,c
   239  0000D8  3611               	rlcf	(??_main+1)^0,f,c
   240  0000DA  90D8               	bcf	status,0,c
   241  0000DC  3610               	rlcf	??_main^0,f,c
   242  0000DE  3611               	rlcf	(??_main+1)^0,f,c
   243  0000E0  90D8               	bcf	status,0,c
   244  0000E2  3610               	rlcf	??_main^0,f,c
   245  0000E4  3611               	rlcf	(??_main+1)^0,f,c
   246  0000E6  C010  F003         	movff	??_main,_can_rxbuff+2
   247  0000EA  C011  F004         	movff	??_main+1,_can_rxbuff+3
   248  0000EE                     
   249                           ;newmain.c: 149:         can_rxbuff.fullid = can_rxbuff.fullid | can_rxbuff.idl>>5;
   250  0000EE  C002  F010         	movff	_can_rxbuff+1,??_main
   251  0000F2  0E05               	movlw	5
   252  0000F4  6E11               	movwf	(??_main+1)^0,c
   253  0000F6                     u35:
   254  0000F6  90D8               	bcf	status,0,c
   255  0000F8  3210               	rrcf	??_main^0,f,c
   256  0000FA  2E11               	decfsz	(??_main+1)^0,f,c
   257  0000FC  EF7B  F000         	goto	u35
   258  000100  5003               	movf	(_can_rxbuff+2)^0,w,c
   259  000102  1010               	iorwf	??_main^0,w,c
   260  000104  6E03               	movwf	(_can_rxbuff+2)^0,c
   261  000106  5004               	movf	(_can_rxbuff+3)^0,w,c
   262  000108  6E04               	movwf	(_can_rxbuff+3)^0,c
   263  00010A                     
   264                           ;newmain.c: 150:         if( can_rxbuff.fullid == 0xfe )
   265  00010A  0EFE               	movlw	254
   266  00010C  1803               	xorwf	(_can_rxbuff+2)^0,w,c
   267  00010E  1004               	iorwf	(_can_rxbuff+3)^0,w,c
   268  000110  A4D8               	btfss	status,2,c
   269  000112  EF8D  F000         	goto	u41
   270  000116  EF8F  F000         	goto	u40
   271  00011A                     u41:
   272  00011A  EFD7  F000         	goto	l841
   273  00011E                     u40:
   274  00011E                     
   275                           ;newmain.c: 151:         {;newmain.c: 152:             if( ( can_rxbuff.d0 == 0xa5 ) &&
   276  00011E  0EA5               	movlw	165
   277  000120  1806               	xorwf	(_can_rxbuff+5)^0,w,c
   278  000122  A4D8               	btfss	status,2,c
   279  000124  EF96  F000         	goto	u51
   280  000128  EF98  F000         	goto	u50
   281  00012C                     u51:
   282  00012C  EFD7  F000         	goto	l841
   283  000130                     u50:
   284  000130  0EFC               	movlw	252
   285  000132  1807               	xorwf	(_can_rxbuff+6)^0,w,c
   286  000134  A4D8               	btfss	status,2,c
   287  000136  EF9F  F000         	goto	u61
   288  00013A  EFA1  F000         	goto	u60
   289  00013E                     u61:
   290  00013E  EFD7  F000         	goto	l841
   291  000142                     u60:
   292  000142  0ED0               	movlw	208
   293  000144  1808               	xorwf	(_can_rxbuff+7)^0,w,c
   294  000146  A4D8               	btfss	status,2,c
   295  000148  EFA8  F000         	goto	u71
   296  00014C  EFAA  F000         	goto	u70
   297  000150                     u71:
   298  000150  EFD7  F000         	goto	l841
   299  000154                     u70:
   300  000154  0EDD               	movlw	221
   301  000156  1809               	xorwf	(_can_rxbuff+8)^0,w,c
   302  000158  A4D8               	btfss	status,2,c
   303  00015A  EFB1  F000         	goto	u81
   304  00015E  EFB3  F000         	goto	u80
   305  000162                     u81:
   306  000162  EFD7  F000         	goto	l841
   307  000166                     u80:
   308  000166  0EFC               	movlw	252
   309  000168  180A               	xorwf	(_can_rxbuff+9)^0,w,c
   310  00016A  A4D8               	btfss	status,2,c
   311  00016C  EFBA  F000         	goto	u91
   312  000170  EFBC  F000         	goto	u90
   313  000174                     u91:
   314  000174  EFD7  F000         	goto	l841
   315  000178                     u90:
   316  000178  0EFD               	movlw	253
   317  00017A  180B               	xorwf	(_can_rxbuff+10)^0,w,c
   318  00017C  A4D8               	btfss	status,2,c
   319  00017E  EFC3  F000         	goto	u101
   320  000182  EFC5  F000         	goto	u100
   321  000186                     u101:
   322  000186  EFD7  F000         	goto	l841
   323  00018A                     u100:
   324  00018A  0EBD               	movlw	189
   325  00018C  180C               	xorwf	(_can_rxbuff+11)^0,w,c
   326  00018E  A4D8               	btfss	status,2,c
   327  000190  EFCC  F000         	goto	u111
   328  000194  EFCE  F000         	goto	u110
   329  000198                     u111:
   330  000198  EFD7  F000         	goto	l841
   331  00019C                     u110:
   332  00019C  500D               	movf	(_can_rxbuff+12)^0,w,c
   333  00019E  A4D8               	btfss	status,2,c
   334  0001A0  EFD4  F000         	goto	u121
   335  0001A4  EFD6  F000         	goto	u120
   336  0001A8                     u121:
   337  0001A8  EFD7  F000         	goto	l841
   338  0001AC                     u120:
   339  0001AC                     
   340                           ;newmain.c: 160:                         {;newmain.c: 161:                             L
      +                          ATCbits.LATC1 = 0;
   341  0001AC  928B               	bcf	139,1,c	;volatile
   342  0001AE                     l841:
   343                           
   344                           ;newmain.c: 164:         if( can_rxbuff.fullid == 0x130 )
   345  0001AE  0E30               	movlw	48
   346  0001B0  1803               	xorwf	(_can_rxbuff+2)^0,w,c
   347  0001B2  E106               	bnz	u131
   348  0001B4  0404               	decf	(_can_rxbuff+3)^0,w,c
   349  0001B6  A4D8               	btfss	status,2,c
   350  0001B8  EFE0  F000         	goto	u131
   351  0001BC  EFE2  F000         	goto	u130
   352  0001C0                     u131:
   353  0001C0  EF0E  F001         	goto	l855
   354  0001C4                     u130:
   355  0001C4                     
   356                           ;newmain.c: 165:         {;newmain.c: 166:             if( ( can_rxbuff.d0 == 0x45 ) &&
   357  0001C4  0E45               	movlw	69
   358  0001C6  1806               	xorwf	(_can_rxbuff+5)^0,w,c
   359  0001C8  A4D8               	btfss	status,2,c
   360  0001CA  EFE9  F000         	goto	u141
   361  0001CE  EFEB  F000         	goto	u140
   362  0001D2                     u141:
   363  0001D2  EF0E  F001         	goto	l855
   364  0001D6                     u140:
   365  0001D6  0EF1               	movlw	241
   366  0001D8  1807               	xorwf	(_can_rxbuff+6)^0,w,c
   367  0001DA  A4D8               	btfss	status,2,c
   368  0001DC  EFF2  F000         	goto	u151
   369  0001E0  EFF4  F000         	goto	u150
   370  0001E4                     u151:
   371  0001E4  EF0E  F001         	goto	l855
   372  0001E8                     u150:
   373  0001E8  0EFC               	movlw	252
   374  0001EA  1808               	xorwf	(_can_rxbuff+7)^0,w,c
   375  0001EC  A4D8               	btfss	status,2,c
   376  0001EE  EFFB  F000         	goto	u161
   377  0001F2  EFFD  F000         	goto	u160
   378  0001F6                     u161:
   379  0001F6  EF0E  F001         	goto	l855
   380  0001FA                     u160:
   381  0001FA  2809               	incf	(_can_rxbuff+8)^0,w,c
   382  0001FC  A4D8               	btfss	status,2,c
   383  0001FE  EF03  F001         	goto	u171
   384  000202  EF05  F001         	goto	u170
   385  000206                     u171:
   386  000206  EF0E  F001         	goto	l855
   387  00020A                     u170:
   388  00020A  280A               	incf	(_can_rxbuff+9)^0,w,c
   389  00020C  A4D8               	btfss	status,2,c
   390  00020E  EF0B  F001         	goto	u181
   391  000212  EF0D  F001         	goto	u180
   392  000216                     u181:
   393  000216  EF0E  F001         	goto	l855
   394  00021A                     u180:
   395  00021A                     
   396                           ;newmain.c: 171:                         {;newmain.c: 172:                             L
      +                          ATCbits.LATC0 = 0;
   397  00021A  908B               	bcf	139,0,c	;volatile
   398  00021C                     l855:
   399                           
   400                           ;newmain.c: 175:         if( can_rxbuff.fullid == 0x42 )
   401  00021C  0E42               	movlw	66
   402  00021E  1803               	xorwf	(_can_rxbuff+2)^0,w,c
   403  000220  1004               	iorwf	(_can_rxbuff+3)^0,w,c
   404  000222  A4D8               	btfss	status,2,c
   405  000224  EF16  F001         	goto	u191
   406  000228  EF18  F001         	goto	u190
   407  00022C                     u191:
   408  00022C  EF67  F000         	goto	l817
   409  000230                     u190:
   410  000230                     
   411                           ;newmain.c: 176:         {;newmain.c: 177:             if( ( can_rxbuff.d0 == 0x00 ) &&
   412  000230  5006               	movf	(_can_rxbuff+5)^0,w,c
   413  000232  A4D8               	btfss	status,2,c
   414  000234  EF1E  F001         	goto	u201
   415  000238  EF20  F001         	goto	u200
   416  00023C                     u201:
   417  00023C  EF67  F000         	goto	l817
   418  000240                     u200:
   419  000240  5007               	movf	(_can_rxbuff+6)^0,w,c
   420  000242  A4D8               	btfss	status,2,c
   421  000244  EF26  F001         	goto	u211
   422  000248  EF28  F001         	goto	u210
   423  00024C                     u211:
   424  00024C  EF67  F000         	goto	l817
   425  000250                     u210:
   426  000250  0E08               	movlw	8
   427  000252  1808               	xorwf	(_can_rxbuff+7)^0,w,c
   428  000254  A4D8               	btfss	status,2,c
   429  000256  EF2F  F001         	goto	u221
   430  00025A  EF31  F001         	goto	u220
   431  00025E                     u221:
   432  00025E  EF67  F000         	goto	l817
   433  000262                     u220:
   434  000262  5009               	movf	(_can_rxbuff+8)^0,w,c
   435  000264  A4D8               	btfss	status,2,c
   436  000266  EF37  F001         	goto	u231
   437  00026A  EF39  F001         	goto	u230
   438  00026E                     u231:
   439  00026E  EF67  F000         	goto	l817
   440  000272                     u230:
   441  000272  0E03               	movlw	3
   442  000274  180A               	xorwf	(_can_rxbuff+9)^0,w,c
   443  000276  A4D8               	btfss	status,2,c
   444  000278  EF40  F001         	goto	u241
   445  00027C  EF42  F001         	goto	u240
   446  000280                     u241:
   447  000280  EF67  F000         	goto	l817
   448  000284                     u240:
   449  000284  0E6E               	movlw	110
   450  000286  180B               	xorwf	(_can_rxbuff+10)^0,w,c
   451  000288  A4D8               	btfss	status,2,c
   452  00028A  EF49  F001         	goto	u251
   453  00028E  EF4B  F001         	goto	u250
   454  000292                     u251:
   455  000292  EF67  F000         	goto	l817
   456  000296                     u250:
   457  000296  0E85               	movlw	133
   458  000298  180C               	xorwf	(_can_rxbuff+11)^0,w,c
   459  00029A  A4D8               	btfss	status,2,c
   460  00029C  EF52  F001         	goto	u261
   461  0002A0  EF54  F001         	goto	u260
   462  0002A4                     u261:
   463  0002A4  EF67  F000         	goto	l817
   464  0002A8                     u260:
   465  0002A8  0EF4               	movlw	244
   466  0002AA  180D               	xorwf	(_can_rxbuff+12)^0,w,c
   467  0002AC  A4D8               	btfss	status,2,c
   468  0002AE  EF5B  F001         	goto	u271
   469  0002B2  EF5D  F001         	goto	u270
   470  0002B6                     u271:
   471  0002B6  EF67  F000         	goto	l817
   472  0002BA                     u270:
   473  0002BA                     
   474                           ;newmain.c: 185:                         {;newmain.c: 186:                             L
      +                          ATBbits.LATB6 = 0;
   475  0002BA  9C8A               	bcf	138,6,c	;volatile
   476  0002BC  EF67  F000         	goto	l817
   477  0002C0  EF53  F000         	goto	start
   478  0002C4                     __end_of_main:
   479                           	callstack 0
   480                           
   481 ;; *************** function _can_init *****************
   482 ;; Defined at:
   483 ;;		line 90 in file "newmain.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;                  1    wreg      void 
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels used: 1
   503 ;; Hardware stack levels required when called: 1
   504 ;; This function calls:
   505 ;;		Nothing
   506 ;; This function is called by:
   507 ;;		_main
   508 ;; This function uses a non-reentrant model
   509 ;;
   510                           
   511                           	psect	text1
   512  0002C4                     __ptext1:
   513                           	callstack 0
   514  0002C4                     _can_init:
   515                           	callstack 29
   516  0002C4                     
   517                           ;newmain.c: 93:     TRISBbits.TRISB2 = 0;
   518  0002C4  9493               	bcf	147,2,c	;volatile
   519                           
   520                           ;newmain.c: 94:     TRISBbits.TRISB3 = 1;
   521  0002C6  8693               	bsf	147,3,c	;volatile
   522  0002C8                     
   523                           ;newmain.c: 96:     CANCONbits.REQOP = 0b100;
   524  0002C8  506F               	movf	111,w,c	;volatile
   525  0002CA  0B1F               	andlw	-225
   526  0002CC  0980               	iorlw	128
   527  0002CE  6E6F               	movwf	111,c	;volatile
   528  0002D0                     l807:
   529  0002D0  506E               	movf	110,w,c	;volatile
   530  0002D2  0BE0               	andlw	224
   531  0002D4  0A80               	xorlw	128
   532  0002D6  A4D8               	btfss	status,2,c
   533  0002D8  EF70  F001         	goto	u11
   534  0002DC  EF72  F001         	goto	u10
   535  0002E0                     u11:
   536  0002E0  EF68  F001         	goto	l807
   537  0002E4                     u10:
   538  0002E4                     
   539                           ;newmain.c: 98:     ECANCON = 0x00;
   540  0002E4  0E00               	movlw	0
   541  0002E6  6E72               	movwf	114,c	;volatile
   542                           
   543                           ;newmain.c: 99:     RXM0EIDH = 0x00;
   544  0002E8  0E00               	movlw	0
   545  0002EA  010E               	movlb	14	; () banked
   546  0002EC  6FFA               	movwf	250,b	;volatile
   547                           
   548                           ;newmain.c: 100:     RXM0EIDL = 0x00;
   549  0002EE  0E00               	movlw	0
   550  0002F0  6FFB               	movwf	251,b	;volatile
   551                           
   552                           ;newmain.c: 101:     RXM0SIDH = 0x00;
   553  0002F2  0E00               	movlw	0
   554  0002F4  6FF8               	movwf	248,b	;volatile
   555                           
   556                           ;newmain.c: 102:     RXM0SIDL = 0x00;
   557  0002F6  0E00               	movlw	0
   558  0002F8  6FF9               	movwf	249,b	;volatile
   559                           
   560                           ;newmain.c: 103:     RXM1EIDH = 0x00;
   561  0002FA  0E00               	movlw	0
   562  0002FC  6FFE               	movwf	254,b	;volatile
   563                           
   564                           ;newmain.c: 104:     RXM1EIDL = 0x00;
   565  0002FE  0E00               	movlw	0
   566  000300  6FFF               	movwf	255,b	;volatile
   567                           
   568                           ;newmain.c: 105:     RXM1SIDH = 0x00;
   569  000302  0E00               	movlw	0
   570  000304  6FFC               	movwf	252,b	;volatile
   571                           
   572                           ;newmain.c: 106:     RXM1SIDL = 0x00;
   573  000306  0E00               	movlw	0
   574  000308  6FFD               	movwf	253,b	;volatile
   575                           
   576                           ;newmain.c: 107:     RXF0EIDH = 0x00;
   577  00030A  0E00               	movlw	0
   578  00030C  6FE2               	movwf	226,b	;volatile
   579                           
   580                           ;newmain.c: 108:     RXF0EIDL = 0x00;
   581  00030E  0E00               	movlw	0
   582  000310  6FE3               	movwf	227,b	;volatile
   583                           
   584                           ;newmain.c: 109:     RXF0SIDH = 0x00;
   585  000312  0E00               	movlw	0
   586  000314  6FE0               	movwf	224,b	;volatile
   587                           
   588                           ;newmain.c: 110:     RXF0SIDL = 0x00;
   589  000316  0E00               	movlw	0
   590  000318  6FE1               	movwf	225,b	;volatile
   591                           
   592                           ;newmain.c: 111:     RXF1EIDH = 0x00;
   593  00031A  0E00               	movlw	0
   594  00031C  6FE6               	movwf	230,b	;volatile
   595                           
   596                           ;newmain.c: 112:     RXF1EIDL = 0x00;
   597  00031E  0E00               	movlw	0
   598  000320  6FE7               	movwf	231,b	;volatile
   599                           
   600                           ;newmain.c: 113:     RXF1SIDH = 0x00;
   601  000322  0E00               	movlw	0
   602  000324  6FE4               	movwf	228,b	;volatile
   603                           
   604                           ;newmain.c: 114:     RXF1SIDL = 0x00;
   605  000326  0E00               	movlw	0
   606  000328  6FE5               	movwf	229,b	;volatile
   607                           
   608                           ;newmain.c: 117:     BRGCON1 = 0x01;
   609  00032A  0E01               	movlw	1
   610  00032C  6F43               	movwf	67,b	;volatile
   611                           
   612                           ;newmain.c: 118:     BRGCON2 = 0x98;
   613  00032E  0E98               	movlw	152
   614  000330  6F44               	movwf	68,b	;volatile
   615                           
   616                           ;newmain.c: 119:     BRGCON3 = 0x01;
   617  000332  0E01               	movlw	1
   618  000334  6F45               	movwf	69,b	;volatile
   619                           
   620                           ;newmain.c: 121:     ECANCONbits.MDSEL = 0b00;
   621  000336  0E3F               	movlw	-193
   622  000338  1672               	andwf	114,f,c	;volatile
   623                           
   624                           ;newmain.c: 122:     CANCONbits.REQOP = 0b011;
   625  00033A  506F               	movf	111,w,c	;volatile
   626  00033C  0B1F               	andlw	-225
   627  00033E  0960               	iorlw	96
   628  000340  6E6F               	movwf	111,c	;volatile
   629  000342                     l811:
   630  000342  386E               	swapf	110,w,c	;volatile
   631  000344  32E8               	rrcf	wreg,f,c
   632  000346  0B07               	andlw	7
   633  000348  0A03               	xorlw	3
   634  00034A  A4D8               	btfss	status,2,c
   635  00034C  EFAA  F001         	goto	u21
   636  000350  EFAC  F001         	goto	u20
   637  000354                     u21:
   638  000354  EFA1  F001         	goto	l811
   639  000358                     u20:
   640  000358  0012               	return		;funcret
   641  00035A                     __end_of_can_init:
   642                           	callstack 0
   643                           
   644 ;; *************** function _myISR *****************
   645 ;; Defined at:
   646 ;;		line 192 in file "newmain.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;                  1    wreg      void 
   653 ;; Registers used:
   654 ;;		wreg, status,2, status,0
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used: 1
   666 ;; This function calls:
   667 ;;		Nothing
   668 ;; This function is called by:
   669 ;;		Interrupt level 2
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	intcode
   674  000008                     __pintcode:
   675                           	callstack 0
   676  000008                     _myISR:
   677                           	callstack 29
   678                           
   679                           ;incstack = 0
   680  000008  8212               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   681  00000A                     
   682                           ;newmain.c: 195:  if (PIR5bits.RXB0IF && PIE5bits.RXB0IE)
   683  00000A  A077               	btfss	119,0,c	;volatile
   684  00000C  EF0A  F000         	goto	i2u28_41
   685  000010  EF0C  F000         	goto	i2u28_40
   686  000014                     i2u28_41:
   687  000014  EF2C  F000         	goto	i2l885
   688  000018                     i2u28_40:
   689  000018  A076               	btfss	118,0,c	;volatile
   690  00001A  EF11  F000         	goto	i2u29_41
   691  00001E  EF13  F000         	goto	i2u29_40
   692  000022                     i2u29_41:
   693  000022  EF2C  F000         	goto	i2l885
   694  000026                     i2u29_40:
   695  000026                     
   696                           ;newmain.c: 196:   {;newmain.c: 197:   PIR5bits.RXB0IF = 0;
   697  000026  9077               	bcf	119,0,c	;volatile
   698                           
   699                           ;newmain.c: 199:   can_rxbuff.d0 = RXB0D0;
   700  000028  CF66 F006          	movff	3942,_can_rxbuff+5	;volatile
   701                           
   702                           ;newmain.c: 200:   can_rxbuff.d1 = RXB0D1;
   703  00002C  CF67 F007          	movff	3943,_can_rxbuff+6	;volatile
   704                           
   705                           ;newmain.c: 201:   can_rxbuff.d2 = RXB0D2;
   706  000030  CF68 F008          	movff	3944,_can_rxbuff+7	;volatile
   707                           
   708                           ;newmain.c: 202:   can_rxbuff.d3 = RXB0D3;
   709  000034  CF69 F009          	movff	3945,_can_rxbuff+8	;volatile
   710                           
   711                           ;newmain.c: 203:         can_rxbuff.d4 = RXB0D4;
   712  000038  CF6A F00A          	movff	3946,_can_rxbuff+9	;volatile
   713                           
   714                           ;newmain.c: 204:         can_rxbuff.d5 = RXB0D5;
   715  00003C  CF6B F00B          	movff	3947,_can_rxbuff+10	;volatile
   716                           
   717                           ;newmain.c: 205:         can_rxbuff.d6 = RXB0D6;
   718  000040  CF6C F00C          	movff	3948,_can_rxbuff+11	;volatile
   719                           
   720                           ;newmain.c: 206:         can_rxbuff.d7 = RXB0D7;
   721  000044  CF6D F00D          	movff	3949,_can_rxbuff+12	;volatile
   722                           
   723                           ;newmain.c: 207:   can_rxbuff.dl = RXB0DLC;
   724  000048  CF65 F005          	movff	3941,_can_rxbuff+4	;volatile
   725                           
   726                           ;newmain.c: 208:         can_rxbuff.idh = RXB0SIDH;
   727  00004C  CF61 F001          	movff	3937,_can_rxbuff	;volatile
   728  000050                     
   729                           ;newmain.c: 209:         can_rxbuff.idl = (RXB0SIDL&0xe0);
   730  000050  5062               	movf	98,w,c	;volatile
   731  000052  0BE0               	andlw	224
   732  000054  6E02               	movwf	(_can_rxbuff+1)^0,c
   733  000056                     
   734                           ;newmain.c: 211:         RXB0CONbits.RXFUL = 0;
   735  000056  9E60               	bcf	96,7,c	;volatile
   736  000058                     i2l885:
   737                           
   738                           ;newmain.c: 213:     if(INTCONbits.T0IE && INTCONbits.TMR0IF)
   739  000058  AAF2               	btfss	242,5,c	;volatile
   740  00005A  EF31  F000         	goto	i2u30_41
   741  00005E  EF33  F000         	goto	i2u30_40
   742  000062                     i2u30_41:
   743  000062  EF51  F000         	goto	i2l127
   744  000066                     i2u30_40:
   745  000066  A4F2               	btfss	242,2,c	;volatile
   746  000068  EF38  F000         	goto	i2u31_41
   747  00006C  EF3A  F000         	goto	i2u31_40
   748  000070                     i2u31_41:
   749  000070  EF51  F000         	goto	i2l127
   750  000074                     i2u31_40:
   751  000074                     
   752                           ;newmain.c: 214:     {;newmain.c: 215:         ledtimer++;
   753  000074  4A0E               	infsnz	_ledtimer^0,f,c
   754  000076  2A0F               	incf	(_ledtimer+1)^0,f,c
   755  000078                     
   756                           ;newmain.c: 216:         if(ledtimer > 500)
   757  000078  0EF5               	movlw	245
   758  00007A  5C0E               	subwf	_ledtimer^0,w,c
   759  00007C  0E01               	movlw	1
   760  00007E  580F               	subwfb	(_ledtimer+1)^0,w,c
   761  000080  A0D8               	btfss	status,0,c
   762  000082  EF45  F000         	goto	i2u32_41
   763  000086  EF47  F000         	goto	i2u32_40
   764  00008A                     i2u32_41:
   765  00008A  EF4C  F000         	goto	i2l897
   766  00008E                     i2u32_40:
   767  00008E                     
   768                           ;newmain.c: 217:         {;newmain.c: 218:             LATBbits.LATB7 ^= 1;
   769  00008E  7E8A               	btg	138,7,c	;volatile
   770  000090                     
   771                           ;newmain.c: 219:             ledtimer = 0;
   772  000090  0E00               	movlw	0
   773  000092  6E0F               	movwf	(_ledtimer+1)^0,c
   774  000094  0E00               	movlw	0
   775  000096  6E0E               	movwf	_ledtimer^0,c
   776  000098                     i2l897:
   777                           
   778                           ;newmain.c: 221:         TMR0H = 0xC1;
   779  000098  0EC1               	movlw	193
   780  00009A  6ED7               	movwf	215,c	;volatile
   781  00009C                     
   782                           ;newmain.c: 222:         TMR0L = 0x7F;
   783  00009C  0E7F               	movlw	127
   784  00009E  6ED6               	movwf	214,c	;volatile
   785  0000A0                     
   786                           ;newmain.c: 223:         INTCONbits.TMR0IF = 0;
   787  0000A0  94F2               	bcf	242,2,c	;volatile
   788  0000A2                     i2l127:
   789  0000A2  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   790  0000A4  0011               	retfie		f
   791  0000A6                     __end_of_myISR:
   792                           	callstack 0
   793  0000                     
   794                           	psect	rparam
   795  0000                     
   796                           	psect	temp
   797  000012                     btemp:
   798                           	callstack 0
   799  000012                     	ds	1
   800  0000                     int$flags	set	btemp
   801  0000                     wtemp8	set	btemp+1
   802  0000                     ttemp5	set	btemp+1
   803  0000                     ttemp6	set	btemp+4
   804  0000                     ttemp7	set	btemp+8
   805                           
   806                           	psect	idloc
   807                           
   808                           ;Config register IDLOC0 @ 0x200000
   809                           ;	unspecified, using default values
   810  200000                     	org	2097152
   811  200000  FF                 	db	255
   812                           
   813                           ;Config register IDLOC1 @ 0x200001
   814                           ;	unspecified, using default values
   815  200001                     	org	2097153
   816  200001  FF                 	db	255
   817                           
   818                           ;Config register IDLOC2 @ 0x200002
   819                           ;	unspecified, using default values
   820  200002                     	org	2097154
   821  200002  FF                 	db	255
   822                           
   823                           ;Config register IDLOC3 @ 0x200003
   824                           ;	unspecified, using default values
   825  200003                     	org	2097155
   826  200003  FF                 	db	255
   827                           
   828                           ;Config register IDLOC4 @ 0x200004
   829                           ;	unspecified, using default values
   830  200004                     	org	2097156
   831  200004  FF                 	db	255
   832                           
   833                           ;Config register IDLOC5 @ 0x200005
   834                           ;	unspecified, using default values
   835  200005                     	org	2097157
   836  200005  FF                 	db	255
   837                           
   838                           ;Config register IDLOC6 @ 0x200006
   839                           ;	unspecified, using default values
   840  200006                     	org	2097158
   841  200006  FF                 	db	255
   842                           
   843                           ;Config register IDLOC7 @ 0x200007
   844                           ;	unspecified, using default values
   845  200007                     	org	2097159
   846  200007  FF                 	db	255
   847                           
   848                           	psect	config
   849                           
   850                           ;Config register CONFIG1L @ 0x300000
   851                           ;	VREG Sleep Enable bit
   852                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
   853                           ;	LF-INTOSC Low-power Enable bit
   854                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
   855                           ;	SOSC Power Selection and mode Configuration bits
   856                           ;	SOSCSEL = HIGH, High Power SOSC circuit selected
   857                           ;	Extended Instruction Set
   858                           ;	XINST = OFF, Disabled
   859  300000                     	org	3145728
   860  300000  1D                 	db	29
   861                           
   862                           ;Config register CONFIG1H @ 0x300001
   863                           ;	Oscillator
   864                           ;	FOSC = HS1, HS oscillator (Medium power, 4 MHz - 16 MHz)
   865                           ;	PLL x4 Enable bit
   866                           ;	PLLCFG = ON, Enabled
   867                           ;	Fail-Safe Clock Monitor
   868                           ;	FCMEN = ON, Enabled
   869                           ;	Internal External Oscillator Switch Over Mode
   870                           ;	IESO = ON, Enabled
   871  300001                     	org	3145729
   872  300001  D3                 	db	211
   873                           
   874                           ;Config register CONFIG2L @ 0x300002
   875                           ;	Power Up Timer
   876                           ;	PWRTEN = ON, Enabled
   877                           ;	Brown Out Detect
   878                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
   879                           ;	Brown-out Reset Voltage bits
   880                           ;	BORV = 3, 1.8V
   881                           ;	BORMV Power level
   882                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
   883  300002                     	org	3145730
   884  300002  7E                 	db	126
   885                           
   886                           ;Config register CONFIG2H @ 0x300003
   887                           ;	Watchdog Timer
   888                           ;	WDTEN = SWDTDIS, WDT enabled in hardware; SWDTEN bit disabled
   889                           ;	Watchdog Postscaler
   890                           ;	WDTPS = 1048576, 1:1048576
   891  300003                     	org	3145731
   892  300003  7F                 	db	127
   893                           
   894                           ; Padding undefined space
   895  300004                     	org	3145732
   896  300004  FF                 	db	255
   897                           
   898                           ;Config register CONFIG3H @ 0x300005
   899                           ;	ECAN Mux bit
   900                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
   901                           ;	MSSP address masking
   902                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
   903                           ;	Master Clear Enable
   904                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
   905  300005                     	org	3145733
   906  300005  89                 	db	137
   907                           
   908                           ;Config register CONFIG4L @ 0x300006
   909                           ;	Stack Overflow Reset
   910                           ;	STVREN = ON, Enabled
   911                           ;	Boot Block Size
   912                           ;	BBSIZ = BB2K, 2K word Boot Block size
   913  300006                     	org	3145734
   914  300006  91                 	db	145
   915                           
   916                           ; Padding undefined space
   917  300007                     	org	3145735
   918  300007  FF                 	db	255
   919                           
   920                           ;Config register CONFIG5L @ 0x300008
   921                           ;	Code Protect 00800-03FFF
   922                           ;	CP0 = OFF, Disabled
   923                           ;	Code Protect 04000-07FFF
   924                           ;	CP1 = OFF, Disabled
   925                           ;	Code Protect 08000-0BFFF
   926                           ;	CP2 = OFF, Disabled
   927                           ;	Code Protect 0C000-0FFFF
   928                           ;	CP3 = OFF, Disabled
   929  300008                     	org	3145736
   930  300008  0F                 	db	15
   931                           
   932                           ;Config register CONFIG5H @ 0x300009
   933                           ;	Code Protect Boot
   934                           ;	CPB = OFF, Disabled
   935                           ;	Data EE Read Protect
   936                           ;	CPD = OFF, Disabled
   937  300009                     	org	3145737
   938  300009  C0                 	db	192
   939                           
   940                           ;Config register CONFIG6L @ 0x30000A
   941                           ;	Table Write Protect 00800-03FFF
   942                           ;	WRT0 = OFF, Disabled
   943                           ;	Table Write Protect 04000-07FFF
   944                           ;	WRT1 = OFF, Disabled
   945                           ;	Table Write Protect 08000-0BFFF
   946                           ;	WRT2 = OFF, Disabled
   947                           ;	Table Write Protect 0C000-0FFFF
   948                           ;	WRT3 = OFF, Disabled
   949  30000A                     	org	3145738
   950  30000A  0F                 	db	15
   951                           
   952                           ;Config register CONFIG6H @ 0x30000B
   953                           ;	Config. Write Protect
   954                           ;	WRTC = OFF, Disabled
   955                           ;	Table Write Protect Boot
   956                           ;	WRTB = OFF, Disabled
   957                           ;	Data EE Write Protect
   958                           ;	WRTD = OFF, Disabled
   959  30000B                     	org	3145739
   960  30000B  E0                 	db	224
   961                           
   962                           ;Config register CONFIG7L @ 0x30000C
   963                           ;	Table Read Protect 00800-03FFF
   964                           ;	EBTR0 = OFF, Disabled
   965                           ;	Table Read Protect 04000-07FFF
   966                           ;	EBTR1 = OFF, Disabled
   967                           ;	Table Read Protect 08000-0BFFF
   968                           ;	EBTR2 = OFF, Disabled
   969                           ;	Table Read Protect 0C000-0FFFF
   970                           ;	EBTR3 = OFF, Disabled
   971  30000C                     	org	3145740
   972  30000C  0F                 	db	15
   973                           
   974                           ;Config register CONFIG7H @ 0x30000D
   975                           ;	Table Read Protect Boot
   976                           ;	EBTRB = OFF, Disabled
   977  30000D                     	org	3145741
   978  30000D  40                 	db	64
   979                           tosu	equ	0xFFF
   980                           tosh	equ	0xFFE
   981                           tosl	equ	0xFFD
   982                           stkptr	equ	0xFFC
   983                           pclatu	equ	0xFFB
   984                           pclath	equ	0xFFA
   985                           pcl	equ	0xFF9
   986                           tblptru	equ	0xFF8
   987                           tblptrh	equ	0xFF7
   988                           tblptrl	equ	0xFF6
   989                           tablat	equ	0xFF5
   990                           prodh	equ	0xFF4
   991                           prodl	equ	0xFF3
   992                           indf0	equ	0xFEF
   993                           postinc0	equ	0xFEE
   994                           postdec0	equ	0xFED
   995                           preinc0	equ	0xFEC
   996                           plusw0	equ	0xFEB
   997                           fsr0h	equ	0xFEA
   998                           fsr0l	equ	0xFE9
   999                           wreg	equ	0xFE8
  1000                           indf1	equ	0xFE7
  1001                           postinc1	equ	0xFE6
  1002                           postdec1	equ	0xFE5
  1003                           preinc1	equ	0xFE4
  1004                           plusw1	equ	0xFE3
  1005                           fsr1h	equ	0xFE2
  1006                           fsr1l	equ	0xFE1
  1007                           bsr	equ	0xFE0
  1008                           indf2	equ	0xFDF
  1009                           postinc2	equ	0xFDE
  1010                           postdec2	equ	0xFDD
  1011                           preinc2	equ	0xFDC
  1012                           plusw2	equ	0xFDB
  1013                           fsr2h	equ	0xFDA
  1014                           fsr2l	equ	0xFD9
  1015                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      2      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _myISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _myISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _myISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _myISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _myISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _myISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _myISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
                           _can_init
 ---------------------------------------------------------------------------------
 (1) _can_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myISR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_init

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      2      11       1       18.1%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11       6        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jun 25 02:36:07 2023

                     u10 02E4                       u11 02E0                       u20 0358  
                     u21 0354                       u40 011E                       u41 011A  
                     u50 0130                       u51 012C                       u35 00F6  
                     u60 0142                       u61 013E                       u70 0154  
                     u71 0150                       u80 0166                       u81 0162  
                     u90 0178                       u91 0174                      l105 0358  
                    l811 0342                      l803 02C4                      l805 02C8  
                    l821 010A                      l813 00AA                      l807 02D0  
                    l831 0166                      l823 011E                      l815 00CA  
                    l809 02E4                      l833 0178                      l825 0130  
                    l841 01AE                      l817 00CE                      l851 020A  
                    l843 01C4                      l835 018A                      l827 0142  
                    l819 00EE                      l861 0250                      l853 021A  
                    l845 01D6                      l837 019C                      l829 0154  
                    l871 02A8                      l863 0262                      l847 01E8  
                    l855 021C                      l839 01AC                      l873 02BA  
                    l865 0272                      l857 0230                      l849 01FA  
                    l867 0284                      l859 0240                      l869 0296  
                    u100 018A                      u101 0186                      u110 019C  
                    u111 0198                      u200 0240                      u120 01AC  
                    u201 023C                      u121 01A8                      u210 0250  
                    u130 01C4                      u211 024C                      u131 01C0  
                    u220 0262                      u140 01D6                      u221 025E  
                    u141 01D2                      u230 0272                      u150 01E8  
                    u231 026E                      u151 01E4                      u240 0284  
                    u160 01FA                      u241 0280                      u161 01F6  
                    u250 0296                      u170 020A                      u251 0292  
                    u171 0206                      u260 02A8                      u180 021A  
                    u261 02A4                      u181 0216                      u270 02BA  
                    u190 0230                      u271 02B6                      u191 022C  
                    wreg 000FE8                     _main 00AA                     btemp 0012  
                   start 00A6             ___param_bank 000000                    ?_main 0010  
                  i2l127 00A2                    i2l901 00A0                    i2l881 0050  
                  i2l891 0078                    i2l883 0056                    i2l875 000A  
                  i2l893 008E                    i2l877 0018                    i2l885 0058  
                  i2l895 0090                    i2l887 0066                    i2l879 0026  
                  i2l897 0098                    i2l889 0074                    i2l899 009C  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _myISR 0008  
                  ttemp5 0013                    ttemp6 0016                    ttemp7 001A  
                  status 000FD8                    wtemp8 0013          __initialization 035A  
           __end_of_main 02C4                   ??_main 0010            __activetblptr 000000  
                 ?_myISR 0010                   _RXB0D0 000F66                   _RXB0D1 000F67  
                 _RXB0D2 000F68                   _RXB0D3 000F69                   _RXB0D4 000F6A  
                 _RXB0D5 000F6B                   _RXB0D6 000F6C                   _RXB0D7 000F6D  
       __end_of_can_init 035A                   clear_0 0360                   isa$std 000001  
             __accesstop 0060  __end_of__initialization 0366            ___rparam_used 000001  
         __pcstackCOMRAM 0010            __end_of_myISR 00A6                  ??_myISR 0010  
             _can_rxbuff 0001                  _ECANCON 000F72                  _CANSTAT 000F6E  
                _BRGCON1 000E43                  _BRGCON2 000E44                  _BRGCON3 000E45  
              ?_can_init 0010                  i2u30_40 0066                  i2u30_41 0062  
                i2u31_40 0074                  i2u31_41 0070                  i2u32_40 008E  
                i2u32_41 008A                  _RXB0DLC 000F65                  i2u28_40 0018  
                i2u28_41 0014                  i2u29_40 0026                  i2u29_41 0022  
                __Hparam 0000                  __Lparam 0000                  __pcinit 035A  
                __ramtop 0F00                  __ptext0 00AA                  __ptext1 02C4  
              _T0CONbits 000FD5               ??_can_init 0010     end_of_initialization 0366  
                postinc0 000FEE                _TRISBbits 000F93                _TRISCbits 000F94  
            _ECANCONbits 000F72      start_initialization 035A              _CANSTATbits 000F6E  
            __pbssCOMRAM 0001        __size_of_can_init 0096                __pintcode 0008  
         __size_of_myISR 009E                 _LATBbits 000F8A                 _LATCbits 000F8B  
               _PIE5bits 000F76                 _PIR5bits 000F77                 _RXB0SIDH 000F61  
               _RXB0SIDL 000F62                 _RXF0EIDH 000EE2                 _RXF0EIDL 000EE3  
               _RXF1EIDH 000EE6                 _RXF1EIDL 000EE7                 _RXF0SIDH 000EE0  
               _RXF0SIDL 000EE1                 _RXF1SIDH 000EE4                 _RXF1SIDL 000EE5  
               _RXM0EIDH 000EFA                 _RXM0EIDL 000EFB                 _RXM1EIDH 000EFE  
               _RXM1EIDL 000EFF                 _RXM0SIDH 000EF8                 _RXM0SIDL 000EF9  
               _RXM1SIDH 000EFC                 _RXM1SIDL 000EFD               _CANCONbits 000F6F  
               __Hrparam 0000                 __Lrparam 0000                 _can_init 02C4  
               _ledtimer 000E            __size_of_main 021A                 isa$xinst 000000  
               int$flags 0012              _RXB0CONbits 000F60               _INTCONbits 000FF2  
               intlevel2 0000  
